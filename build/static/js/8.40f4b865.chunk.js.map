{"version":3,"sources":["../node_modules/@ant-design/icons-svg/es/asn/SmileOutlined.js","../node_modules/@ant-design/icons/es/icons/SmileOutlined.js","views/app-views/chat/component/ReactionDropdown.js","views/app-views/chat/component/Reaction.js","views/app-views/chat/component/ReplyButton.js","views/app-views/chat/component/Message.js","views/app-views/chat/component/CustomSpin.js","views/app-views/chat/index.js"],"names":["SmileOutlined","props","ref","React","AntdIcon","Object","assign","icon","SmileOutlinedSvg","displayName","reactionArray","ReactionDropdown","dispatch","useDispatch","useSelector","state","userInfo","auth","currentChat","chatReducer","onSelect","item","key","obj","user","_id","reaction","message","reactions","index","findIndex","console","log","unshift","Socket","emitReactMessage","messageId","chatId","onReactMessage","action","overlay","onClick","className","style","borderRadius","map","Item","trigger","isSender","Reaction","right","left","length","height","width","backgroundColor","alignSelf","position","padding","bottom","showModal","slice","ReplyButton","RetweetOutlined","setCurrentRepliedMessage","Message","messageInfo","startSequence","endSequence","showTimestamp","showReply","showAvatar","timestamp","Utils","formatDate","createdAt","formatTime","useState","hover","setHover","onMouseOver","onMouseLeave","join","repliesTo","src","env","API_ENDPOINT_URL","sender","avatar","url","CustomSpin","indicator","LoadingOutlined","fontSize","spin","Chat","chatEndRef","useRef","currentChatMessages","page","setPage","loading","setLoading","hasMore","firstTime","setFirstTime","isModalVisible","setIsModalVisible","useEffect","emitGetCurrentChatMessages","current","scrollIntoView","behavior","onScroll","e","scrollTop","target","scrollHeight","clientHeight","emitLoadMoreMessages","startPage","docsPerPage","onLoadMoreMessages","payload","overflow","currentMessage","prevMessage","nextMessage","isPrevSender","timeDiff","Date","isNextSender","members","title","visible","onOk","onCancel"],"mappings":"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","file":"static/js/8.40f4b865.chunk.js","sourcesContent":["// This icon file is generated automatically.\nvar SmileOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M288 421a48 48 0 1096 0 48 48 0 10-96 0zm352 0a48 48 0 1096 0 48 48 0 10-96 0zM512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm263 711c-34.2 34.2-74 61-118.3 79.8C611 874.2 562.3 884 512 884c-50.3 0-99-9.8-144.8-29.2A370.4 370.4 0 01248.9 775c-34.2-34.2-61-74-79.8-118.3C149.8 611 140 562.3 140 512s9.8-99 29.2-144.8A370.4 370.4 0 01249 248.9c34.2-34.2 74-61 118.3-79.8C413 149.8 461.7 140 512 140c50.3 0 99 9.8 144.8 29.2A370.4 370.4 0 01775.1 249c34.2 34.2 61 74 79.8 118.3C874.2 413 884 461.7 884 512s-9.8 99-29.2 144.8A368.89 368.89 0 01775 775zM664 533h-48.1c-4.2 0-7.8 3.2-8.1 7.4C604 589.9 562.5 629 512 629s-92.1-39.1-95.8-88.6c-.3-4.2-3.9-7.4-8.1-7.4H360a8 8 0 00-8 8.4c4.4 84.3 74.5 151.6 160 151.6s155.6-67.3 160-151.6a8 8 0 00-8-8.4z\" } }] }, \"name\": \"smile\", \"theme\": \"outlined\" };\nexport default SmileOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport SmileOutlinedSvg from \"@ant-design/icons-svg/es/asn/SmileOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar SmileOutlined = function SmileOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: SmileOutlinedSvg\n  }));\n};\n\nSmileOutlined.displayName = 'SmileOutlined';\nexport default /*#__PURE__*/React.forwardRef(SmileOutlined);","import React, {useState} from \"react\";\r\nimport \"../styles/index.css\"\r\nimport Utils from \"../../../../utils\";\r\nimport {Button, Dropdown, Menu} from \"antd\";\r\nimport {SmileOutlined} from '@ant-design/icons'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Socket from \"../../../../socket/Socket\";\r\n\r\nconst reactionArray = [\r\n  '❤', '😂', '😮', '😞', '😡', '👍', '👎'\r\n]\r\n\r\nconst ReactionDropdown = (props) => {\r\n  const dispatch = useDispatch()\r\n  const {userInfo, currentChat} = useSelector(state => {\r\n    return {\r\n      userInfo: state.auth.userInfo,\r\n      currentChat: state.chatReducer.currentChat\r\n    }\r\n  })\r\n  const onSelect = ({item, key}) => {\r\n    let obj = {\r\n      user: userInfo._id,\r\n      reaction: key,\r\n    }\r\n    let reactionArray = [...props.message.reactions]\r\n    let index = reactionArray.findIndex(item => item.user === userInfo._id || item.user._id === userInfo._id)\r\n    console.log(\"Select: \", index)\r\n    if (index >= 0) {\r\n      reactionArray[index] = obj\r\n    } else {\r\n      reactionArray.unshift(obj)\r\n    }\r\n    Socket.emitReactMessage({\r\n      messageId: props.message._id,\r\n      chatId: currentChat._id,\r\n      reactions: reactionArray\r\n    })\r\n    Socket.onReactMessage((action) => {\r\n      dispatch(action)\r\n    })\r\n  }\r\n\r\n  const menu = () => (\r\n    <Menu onClick={onSelect} className={'d-flex flex-row pl-2 pr-2'} style={{borderRadius: 50}}>\r\n      {reactionArray.map((item, index) => (\r\n        <Menu.Item key={item} className={'p-2'}>\r\n          <h2 className={'mb-0'}>{item}</h2>\r\n        </Menu.Item>\r\n      ))}\r\n    </Menu>\r\n  )\r\n  return (\r\n    <Dropdown overlay={menu} trigger={['click']}>\r\n      <SmileOutlined className={`align-self-center ${props.isSender ? 'mr-2' : 'ml-2'}`}/>\r\n    </Dropdown>\r\n  )\r\n}\r\n\r\nexport default ReactionDropdown\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Modal} from \"antd\";\r\n\r\nconst Reaction = (props) => {\r\n\r\n\r\n  const style = props.isSender ? {\r\n    right: '75%',\r\n  } : {\r\n    left: '75%',\r\n  }\r\n  return (\r\n    <>\r\n      {props.reactions && props.reactions?.length > 0 &&\r\n      <div\r\n        className={`reaction-container d-flex ${props.isSender ? 'flex-row' : 'flex-row-reverse'} align-items-center`}\r\n        style={{\r\n          height: 'fit-content',\r\n          width: 'fit-content',\r\n          backgroundColor: '#fff',\r\n          alignSelf: 'flex-end',\r\n          position: 'absolute',\r\n          borderRadius: 100,\r\n          padding: '1px 2px',\r\n          bottom: -16,\r\n          ...style\r\n        }}\r\n        onClick={props.showModal}\r\n      >\r\n        {props.reactions.slice(0, 3).map((item) => item.reaction).map((item, index) => (\r\n          <h5 key={index} className={'mb-0'}>{item}</h5>))}\r\n        <h6 className={'mb-0 mr-1 ml-1'}>{`${props.reactions.length > 3 ? '+' : \"\"} ${props.reactions.length}`}</h6>\r\n\r\n      </div>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Reaction\r\n","import React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setCurrentRepliedMessage} from \"../../../../redux/actions/ChatActions\";\r\nimport {RetweetOutlined} from '@ant-design/icons'\r\n\r\nconst ReplyButton = (props) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const onClick = () => {\r\n    dispatch(setCurrentRepliedMessage(props.message))\r\n  }\r\n\r\n  return (\r\n    <RetweetOutlined onClick={onClick} className={`align-self-center ${props.isSender ? 'mr-2' : 'ml-2'}`}/>\r\n  )\r\n}\r\n\r\nexport default ReplyButton\r\n","import React, {useEffect, useRef, useState} from \"react\";\r\nimport \"../styles/index.css\"\r\nimport Utils from \"../../../../utils\";\r\nimport ReactionDropdown from \"./ReactionDropdown\";\r\nimport Reaction from \"./Reaction\";\r\nimport ReplyButton from \"./ReplyButton\";\r\nimport {Avatar} from \"antd\";\r\nimport {env} from \"../../../../configs/EnvironmentConfig\";\r\n\r\nconst Message = ({\r\n                   isSender,\r\n                   messageInfo,\r\n                   startSequence,\r\n                   endSequence,\r\n                   showTimestamp,\r\n                   showModal,\r\n                   showReply,\r\n                   showAvatar\r\n                 }) => {\r\n  const timestamp = Utils.formatDate(messageInfo.createdAt) + ' ' + Utils.formatTime(messageInfo.createdAt)\r\n  const [hover, setHover] = useState(false)\r\n  const onMouseOver = () => {\r\n    setHover(true)\r\n  }\r\n  const onMouseLeave = () => {\r\n    setHover(false)\r\n  }\r\n\r\n  return (\r\n    <div onMouseOver={onMouseOver} onMouseLeave={onMouseLeave} className={[\r\n      'message',\r\n      `${isSender ? 'mine' : ''}`,\r\n      `${startSequence || showReply ? 'start' : ''}`,\r\n      `${endSequence || showReply ? 'end' : ''}`,\r\n      `${showAvatar && !endSequence? 'avatar-shown': ''}`,\r\n      `${messageInfo.reactions && messageInfo.reactions?.length > 0 ? 'mb-3' : ''}`\r\n    ].join(' ')}>\r\n      {\r\n        showTimestamp &&\r\n        <div className=\"timestamp\">\r\n          {timestamp}\r\n        </div>\r\n      }\r\n      {\r\n        showReply &&\r\n        <div className={'reply-container'}>\r\n          <div className={'reply'}>\r\n            {messageInfo.repliesTo.message}\r\n          </div>\r\n        </div>\r\n      }\r\n\r\n      <div className={`bubble-container ${isSender && 'flex-row-reverse'} ${showReply && 'has-reply'}`}>\r\n        {showAvatar && endSequence === true &&\r\n        <Avatar className={'mr-2'} src={env.API_ENDPOINT_URL + '/' + messageInfo.sender.avatar.url}/>}\r\n        <div className=\"bubble\">\r\n          {messageInfo.message}\r\n          <Reaction isSender={isSender} reactions={messageInfo.reactions} showModal={showModal}/>\r\n\r\n        </div>\r\n        {hover && <ReactionDropdown message={messageInfo} isSender={isSender}/>}\r\n        {hover && <ReplyButton message={messageInfo} isSender={isSender}/>}\r\n\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message\r\n","import React from \"react\";\r\nimport {Spin} from 'antd';\r\nimport {LoadingOutlined} from '@ant-design/icons';\r\n\r\nconst CustomSpin = () => {\r\n  return (\r\n    <Spin indicator={<LoadingOutlined style={{fontSize: 24}} spin/>}/>\r\n  )\r\n}\r\n\r\nexport default CustomSpin\r\n","import React, {useEffect, useRef, useState} from \"react\";\r\nimport Socket from \"../../../socket/Socket\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Message from \"./component/Message\";\r\nimport CustomSpin from \"./component/CustomSpin\";\r\nimport {Modal} from \"antd\";\r\n\r\nconst Chat = () => {\r\n  const dispatch = useDispatch()\r\n  const chatEndRef = useRef()\r\n  const messageListRef = useRef()\r\n\r\n  const {currentChat, currentChatMessages, userInfo} = useSelector(state => {\r\n    return {\r\n      currentChat: state.chatReducer.currentChat,\r\n      currentChatMessages: state.chatReducer.currentChatMessages,\r\n      userInfo: state.auth.userInfo\r\n    }\r\n  })\r\n  const [page, setPage] = useState(0)\r\n  const [loading, setLoading] = useState(false)\r\n  const [hasMore, setHasMore] = useState(true)\r\n  const [firstTime, setFirstTime] = useState(true)\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    Socket.emitGetCurrentChatMessages(currentChat._id)\r\n  }, [currentChat])\r\n\r\n  useEffect(() => {\r\n    firstTime && chatEndRef.current?.scrollIntoView({behavior: 'smooth'})\r\n    console.log({currentChatMessages})\r\n  }, [currentChatMessages])\r\n\r\n  useEffect(() => {\r\n    console.log({loading, hasMore})\r\n  }, [loading, hasMore])\r\n\r\n  const renderMessage = () => {\r\n    return currentChatMessages.map((message, index) => {\r\n      let currentMessage = message\r\n      let prevMessage = currentChatMessages[index - 1]\r\n      let nextMessage = currentChatMessages[index + 1]\r\n      let startSequence = true\r\n      let endSequence = true\r\n      let showTimestamp = true\r\n      let showReply = false\r\n      let showAvatar = false\r\n      let isSender = currentMessage.sender._id === userInfo._id\r\n\r\n      //  check time sequence(ms)\r\n      if (prevMessage) {\r\n        let isPrevSender = prevMessage.sender._id === currentMessage.sender._id\r\n        let timeDiff = new Date(currentMessage.createdAt) - new Date(prevMessage.createdAt)\r\n        if (isPrevSender && timeDiff < 1 * 60 * 60 * 1000) {\r\n          startSequence = false\r\n        }\r\n        if (timeDiff < 1 * 60 * 60 * 1000) {\r\n          showTimestamp = false\r\n        }\r\n\r\n      }\r\n\r\n      if (nextMessage) {\r\n        let isNextSender = nextMessage.sender._id == currentMessage.sender._id\r\n        let timeDiff = new Date(nextMessage.createdAt) - new Date(currentMessage.createdAt)\r\n        if (isNextSender && timeDiff < 1 * 60 * 60 * 1000) {\r\n          endSequence = false\r\n        }\r\n      }\r\n\r\n      if (message.repliesTo) {\r\n        showReply = true\r\n      }\r\n\r\n      if (!isSender && currentChat.members.length > 2) {\r\n        showAvatar = true\r\n      }\r\n\r\n      return (\r\n        <Message\r\n          key={index}\r\n          isSender={isSender}\r\n          startSequence={startSequence}\r\n          endSequence={endSequence}\r\n          messageInfo={message}\r\n          showTimestamp={showTimestamp}\r\n          showReply={showReply}\r\n          showAvatar={showAvatar}\r\n          showModal={showModal}\r\n        />\r\n      )\r\n\r\n    })\r\n\r\n  }\r\n\r\n  const onLoadMore = () => {\r\n    console.log(\"Loading more...\")\r\n    setLoading(true)\r\n    Socket.emitLoadMoreMessages(currentChat._id, {\r\n      startPage: page + 1,\r\n      docsPerPage: 20\r\n    })\r\n    Socket.onLoadMoreMessages((action) => {\r\n      console.log(action)\r\n      setLoading(false)\r\n      setPage(page + 1)\r\n      action.payload?.length > 0 && dispatch(action)\r\n    })\r\n\r\n  }\r\n\r\n  const handleOnScroll = (e) => {\r\n    console.log({})\r\n    let scrollTop = e.target.scrollTop\r\n    let scrollHeight = e.target.scrollHeight\r\n    let clientHeight = e.target.clientHeight\r\n    if (scrollTop === 0) {\r\n      onLoadMore()\r\n      setFirstTime(false)\r\n    }\r\n    // check if a div scrolls to bottom\r\n    if (scrollHeight - scrollTop === clientHeight) {\r\n      setFirstTime(true)\r\n    } else {\r\n      setFirstTime(false)\r\n    }\r\n\r\n  }\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n    console.log(\"ok\")\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n    console.log(\"cancel\")\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log({isModalVisible})\r\n  }, [isModalVisible])\r\n\r\n  return (\r\n    <div className={'pr-3 pl-3 pb-3'} onScroll={handleOnScroll} style={{overflow: 'auto', height: '100%'}}>\r\n      {loading && <CustomSpin/>}\r\n      {renderMessage()}\r\n      <div ref={chatEndRef}/>\r\n      <Modal title=\"Basic Modal\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n        <p>Some contents...</p>\r\n        <p>Some contents...</p>\r\n        <p>Some contents...</p>\r\n      </Modal>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Chat\r\n"],"sourceRoot":""}
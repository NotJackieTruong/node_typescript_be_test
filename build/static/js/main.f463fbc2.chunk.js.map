{"version":3,"sources":["redux/constants/User.js","history.js","auth/FetchInterceptor.js","components/shared-components/Flex/index.js","redux/constants/Auth.js","services/JwtAuthService.js","configs/AppConfig.js","utils/constants.js","constants/ThemeConstant.js","components/util-components/IntlMessage/index.js","components/util-components/Icon/index.js","configs/NavigationConfig.js","redux/constants/Theme.js","redux/actions/Theme.js","components/layout-components/MenuContent.js","components/layout-components/NavProfile.js","components/layout-components/SideNav.js","components/shared-components/Loading/index.js","components/layout-components/Logo.js","components/layout-components/MobileNav.js","views/app-views/index.js","components/layout-components/CustomComponents/CustomHeader.js","components/layout-components/CustomComponents/CurrentRepliedMessagePreview.js","components/layout-components/CustomComponents/CustomFooter.js","layouts/app-layout/index.js","views/auth-views/index.js","layouts/auth-layout/index.js","lang/entries/en_US.js","lang/entries/zh_CN.js","lang/entries/fr_FR.js","lang/index.js","lang/entries/ja_JP.js","hooks/useBodyClass.js","views/components/ProtectedRoute.js","views/index.js","App.js","serviceWorker.js","redux/reducers/Auth.js","redux/reducers/Theme.js","redux/reducers/UserReducer.js","redux/reducers/ChatReducer.js","redux/reducers/index.js","index.js","utils/index.js","redux/constants/Chat.js","redux/actions/UserActions.js","socket/Socket.js","redux/actions/ChatActions.js","redux/actions/Auth.js","configs/EnvironmentConfig.js"],"names":["SET_ACTIVE_USERS","history","service","axios","create","baseURL","API_BASE_URL","timeout","ENTRY_ROUTE","interceptors","request","use","config","jwtToken","sessionStorage","getItem","AUTH_TOKEN","headers","push","window","location","reload","error","notification","message","Promise","reject","response","data","notificationParam","status","description","removeItem","Flex","props","children","className","alignItems","justifyContent","mobileFlex","flexDirection","defaultProps","SIGNIN","AUTHENTICATED","SIGNOUT","SIGNOUT_SUCCESS","SIGNUP","SIGNUP_SUCCESS","SHOW_AUTH_MESSAGE","HIDE_AUTH_MESSAGE","SHOW_LOADING","HIDE_LOADING","USER_INFO","SIGNIN_WITH_GOOGLE","SIGNIN_WITH_GOOGLE_AUTHENTICATED","SIGNIN_WITH_FACEBOOK","SIGNIN_WITH_FACEBOOK_AUTHENTICATED","SET_USER_INFO","JwtAuthService","fetch","url","method","APP_NAME","env","API_ENDPOINT_URL","APP_PREFIX_PATH","AUTH_PREFIX_PATH","THEME_CONFIG","navCollapsed","sideNavTheme","SIDE_NAV_LIGHT","locale","navType","NAV_TYPE_SIDE","topNavColor","headerNavColor","mobileNav","currentTheme","direction","DIR_LTR","CONSTANTS","STYLES","SPACING","BORDER_RADIUS","ICON_SIZE","SOCKET_EVENTS","ERROR","CONNECTED","GET_ACTIVE_USERS","LOG_IN","LOG_OUT","CREATE_NEW_CHAT","GET_CHATS","DELETE_CHAT","GET_CURRENT_CHAT_MESSAGES","SEND_MESSAGE","LOAD_MORE_MESSAGES","REACT_MESSAGE","REPLY_MESSAGE","UPDATE_USER_PROFILE","UPDATE_USER_PROFILE_IMAGE","SIDE_NAV_WIDTH","SIDE_NAV_COLLAPSED_WIDTH","SIDE_NAV_DARK","NAV_TYPE_TOP","DIR_RTL","injectIntl","withRef","Icon","this","type","React","createElement","Component","dashBoardNavTree","key","path","title","icon","DashboardOutlined","breadcrumb","submenu","navigationConfig","TOGGLE_COLLAPSED_NAV","CHANGE_LOCALE","SIDE_NAV_STYLE_CHANGE","NAV_TYPE_CHANGE","TOP_NAV_COLOR_CHANGE","HEADER_NAV_COLOR_CHANGE","TOGGLE_MOBILE_NAV","SWITCH_THEME","DIRECTION_CHANGE","onMobileNavToggle","SubMenu","Menu","useBreakpoint","Grid","setLocale","isLocaleOn","localeKey","id","toString","setDefaultOpen","keyList","keyString","arr","split","index","length","elm","SideNavContent","hideGroupTitle","localization","isMobile","utils","getBreakPoint","includes","dispatch","useDispatch","useLocation","useHistory","Utils","getRouteMongooseId","pathname","useSelector","state","activeUsers","userReducer","chats","chatReducer","useState","setNavigationConfig","setRouteInfo","useEffect","currentChat","find","item","_id","map","chat","name","avatar","members","getRouteInfo","checkObject","setCurrentChat","theme","mode","style","height","borderRight","defaultSelectedKeys","defaultOpenKeys","onClick","keyPath","selectedKeys","domEvent","menu","Item","paddingLeft","src","size","marginRight","UserOutlined","to","TopNavContent","backgroundColor","popupClassName","subMenuFirst","subMenuSecond","connect","menuItem","EditOutlined","SettingOutlined","NavProfile","userInfo","auth","profileImg","profileMenu","fullName","role","el","i","href","e","Socket","emitLogout","signOut","LogoutOutlined","placement","overlay","trigger","Sider","Layout","Search","Input","routeInfo","isModalVisible","setIsModalVisible","userModalList","setUserModalList","array","filter","isSelected","resetState","width","collapsed","top","padding","margin","shape","placeholder","onSearch","enterButton","SearchOutlined","autoHide","visible","onOk","emitCreateNewChat","onCancel","afterClose","itemLayout","dataSource","renderItem","obj","onSelect","extra","CheckCircleTwoTone","twoToneColor","Meta","LoadingOutlined","fontSize","spin","Loading","align","cover","indicator","getLogoWidthGutter","isNavTop","mobileLogo","getLogo","logoType","getLogoDisplay","alt","onClose","closable","bodyStyle","ArrowLeftOutlined","Preloader","console","log","emitGetActiveUsers","emitGetChats","getMe","then","res","accessToken","authenticated","setUserInfo","user","AppViews","fallback","component","lazy","from","memo","Header","CustomHeader","iconStyle","color","event","Modal","emitDeleteChat","okText","PhoneFilled","VideoCameraFilled","arrow","MoreOutlined","CurrentRepliedMessagePreview","currentRepliedMessage","Object","keys","borderRadius","position","RetweetOutlined","sender","CloseCircleOutlined","right","setCurrentRepliedMessage","CustomFooter","setMessage","inputRef","useRef","inputFileRef","current","focus","onPressEnter","messageObj","createdAt","Date","now","repliesTo","emitSendMessage","ref","onChange","files","target","file","reader","FileReader","onload","result","fileData","readAsArrayBuffer","multiple","display","visibility","bordered","suffix","FileOutlined","click","value","SendOutlined","Content","Footer","AppLayout","currentRouteInfo","getLayoutGutter","useThemeSwitcher","overflow","paddingRight","flexGrow","AuthLayout","AuthViews","EnLang","antd","antdEnUS","messages","enMsg","ZhLang","antdZhCn","zhMsg","FrLang","antdFrFR","frMsg","AppLocale","en","enLang","zh","zhLang","fr","frLang","ja","antdJaJP","jaMsg","addBodyClass","document","body","classList","add","removeBodyClass","remove","ProtectedRoute","isAuthenticated","withRouter","token","currentAppLocale","Array","undefined","exact","App","dispatchAction","action","onConnect","onGetActiveUsers","onCreateNewChat","onGetChats","onGetCurrentChatMessages","onSendMessage","onDeleteChat","Views","Boolean","hostname","match","initState","loading","showMessage","redirect","payload","initTheme","UserReducer","currentChatMessages","ChatReducer","currentChatMessagesClone","chatsClone","SET_CHATS","ADD_CHAT","unshift","SET_CURRENT_CHAT","SET_CURRENT_CHAT_MESSAGES","ADD_MESSAGE","removeDuplicate","concat","UPDATE_MESSAGE","findIndex","SET_CURRENT_REPLIED_MESSAGE","reducers","combineReducers","Theme","Auth","store","createStore","themes","dark","process","light","Main","themeMap","defaultTheme","insertionPoint","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","promise","suspender","r","read","interfaces","devName","iFace","alias","family","address","internal","json","JSON","stringify","setItem","parse","date","d","month","getMonth","day","getDate","year","getFullYear","join","time","hour","getHours","minute","getMinutes","second","getSeconds","checkMongooseObjectId","buffer","blob","Blob","URL","createObjectURL","prop","v","a","t","object","initials","shift","pop","toUpperCase","navTree","route","p","hasOwnProperty","hex","cutHex","h","charAt","substring","parseInt","hexToG","hexToB","percent","R","G","B","RR","GG","BB","rgba","trim","str","replace","inParts","indexOf","g","b","parseFloat","toFixed","outParts","Math","round","forEach","part","number","positive","negative","toLowerCase","list","input","searchText","screens","breakpoints","setActiveUsers","socket","on","emit","callback","users","addChat","setChats","chatId","deleteChat","setCurrentChatMessages","addMessage","options","loadMoreMessages","updateMessage","io","transports","userList","chatList","showAuthMessage","hideAuthMessage","showLoading","hideLoading"],"mappings":"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","file":"static/js/main.f463fbc2.chunk.js","sourcesContent":["export const SET_ACTIVE_USERS = \"SET_ACTIVE_USERS\"\r\n","import * as history from 'history';\r\n\r\nexport default history.createBrowserHistory();","import axios from 'axios'\r\nimport { API_BASE_URL } from 'configs/AppConfig'\r\nimport history from '../history'\r\nimport { AUTH_TOKEN } from 'redux/constants/Auth'\r\nimport { notification } from 'antd';\r\n\r\nconst service = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 60000,\r\n})\r\n\r\n// Config\r\nconst ENTRY_ROUTE = '/auth/login'\r\nconst TOKEN_PAYLOAD_KEY = 'authorization'\r\nconst PUBLIC_REQUEST_KEY = 'public-request'\r\n\r\n// API Request interceptor\r\nservice.interceptors.request.use(config => {\r\n\tconst jwtToken = sessionStorage.getItem(AUTH_TOKEN)\r\n\r\n  if (jwtToken) {\r\n    config.headers[TOKEN_PAYLOAD_KEY] = 'Bearer '+ jwtToken\r\n  }\r\n\r\n  if (!jwtToken && !config.headers[PUBLIC_REQUEST_KEY]) {\r\n\t\thistory.push(ENTRY_ROUTE)\r\n\t\twindow.location.reload();\r\n  }\r\n\r\n  return config\r\n}, error => {\r\n\t// Do something with request error here\r\n\tnotification.error({\r\n\t\tmessage: 'Error'\r\n\t})\r\n  Promise.reject(error)\r\n})\r\n\r\n// API response interceptor\r\nservice.interceptors.response.use( (response) => {\r\n\t// console.log({headers: response.headers})\r\n\treturn response.data\r\n}, (error) => {\r\n\r\n\tlet notificationParam = {\r\n\t\tmessage: ''\r\n\t}\r\n\r\n\t// Remove token and redirect\r\n\tif (error.response.status === 400 || error.response.status === 403) {\r\n\t\tnotificationParam.message = 'Authentication Fail'\r\n\t\tnotificationParam.description = 'Please login again'\r\n\t\tsessionStorage.removeItem(AUTH_TOKEN)\r\n\t\thistory.push(ENTRY_ROUTE)\r\n\t\twindow.location.reload();\r\n\t}\r\n\r\n\tif (error.response.status === 404) {\r\n\t\tnotificationParam.message = 'Not Found'\r\n\t}\r\n\r\n\tif (error.response.status === 500) {\r\n\t\tnotificationParam.message = 'Internal Server Error'\r\n\t}\r\n\r\n\tif (error.response.status === 508) {\r\n\t\tnotificationParam.message = 'Time Out'\r\n\t}\r\n\r\n\tnotification.error(notificationParam)\r\n\r\n\treturn Promise.reject(error);\r\n});\r\n\r\nexport default service\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: ''\r\n};\r\n\r\n\r\nexport default Flex\r\n","export const SIGNIN = 'SIGNIN';\r\nexport const AUTHENTICATED = 'AUTHENTICATED';\r\nexport const SIGNOUT = 'SIGNOUT';\r\nexport const SIGNOUT_SUCCESS = 'SIGNOUT_SUCCESS'\r\nexport const SIGNUP = 'SIGNUP';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nexport const SHOW_AUTH_MESSAGE = 'SHOW_AUTH_MESSAGE'\r\nexport const HIDE_AUTH_MESSAGE = 'HIDE_AUTH_MESSAGE'\r\nexport const SHOW_LOADING = 'SHOW_LOADING'\r\nexport const HIDE_LOADING = \"HIDE_LOADING\"\r\nexport const AUTH_TOKEN = 'auth_token'\r\nexport const USER_INFO = \"user_info\"\r\nexport const SIGNIN_WITH_GOOGLE = 'SIGNIN_WITH_GOOGLE'\r\nexport const SIGNIN_WITH_GOOGLE_AUTHENTICATED = 'SIGNIN_WITH_GOOGLE_AUTHENTICATED'\r\nexport const SIGNIN_WITH_FACEBOOK = 'SIGNIN_WITH_FACEBOOK'\r\nexport const SIGNIN_WITH_FACEBOOK_AUTHENTICATED = 'SIGNIN_WITH_FACEBOOK_AUTHENTICATED'\r\nexport const SET_USER_INFO = \"SET_USER_INFO\"\r\nexport const GET_USER_INFO = \"GET_USER_INFO\"\r\n","import fetch from 'auth/FetchInterceptor'\r\nimport {AUTH_TOKEN} from \"../redux/constants/Auth\";\r\n\r\nconst JwtAuthService = {}\r\n\r\nJwtAuthService.login = function (data) {\r\n\treturn fetch({\r\n\t\turl: '/login',\r\n\t\tmethod: 'post',\r\n\t\theaders: {\r\n      'public-request': 'true'\r\n    },\r\n\t\tdata: data\r\n\t})\r\n}\r\n\r\nJwtAuthService.signUp = function (data) {\r\n\treturn fetch({\r\n\t\turl: '/signup',\r\n\t\tmethod: 'post',\r\n\t\theaders: {\r\n      'public-request': 'true',\r\n    },\r\n\t\tdata: data\r\n\t})\r\n}\r\n\r\nJwtAuthService.getMe = function (data){\r\n\treturn fetch({\r\n\t\turl: '/users/me',\r\n\t\tmethod: 'get',\r\n\t\theaders: {\r\n\t\t},\r\n\t\tdata: {}\r\n\t})\r\n}\r\n\r\nexport default JwtAuthService\r\n","import { SIDE_NAV_LIGHT, NAV_TYPE_SIDE, DIR_LTR } from 'constants/ThemeConstant';\r\nimport { env } from './EnvironmentConfig'\r\n\r\nexport const APP_NAME = 'Emilus';\r\nexport const API_BASE_URL = env.API_ENDPOINT_URL\r\nexport const APP_PREFIX_PATH = '/app';\r\nexport const AUTH_PREFIX_PATH = '/auth';\r\n\r\nexport const THEME_CONFIG = {\r\n\tnavCollapsed: false,\r\n\tsideNavTheme: SIDE_NAV_LIGHT,\r\n\tlocale: 'en',\r\n\tnavType: NAV_TYPE_SIDE,\r\n\ttopNavColor: '#3e82f7',\r\n\theaderNavColor: '',\r\n\tmobileNav: false,\r\n\tcurrentTheme: 'light',\r\n\tdirection: DIR_LTR\r\n};\r\n","const CONSTANTS = {\r\n  STYLES: {\r\n    SPACING: 16,\r\n    BORDER_RADIUS: 8,\r\n    ICON_SIZE: 16,\r\n  },\r\n  SOCKET_EVENTS: {\r\n    ERROR: \"ERROR\",\r\n    CONNECTED: \"CONNECTED\",\r\n    GET_ACTIVE_USERS: \"GET_ACTIVE_USERS\",\r\n    LOG_IN: \"LOG_IN\",\r\n    LOG_OUT: \"LOG_OUT\",\r\n    CREATE_NEW_CHAT: \"CREATE_NEW_CHAT\",\r\n    GET_CHATS: \"GET_CHATS\",\r\n    DELETE_CHAT: \"DELETE_CHAT\",\r\n    GET_CURRENT_CHAT_MESSAGES :\"GET_CURRENT_CHAT_MESSAGES\",\r\n    SEND_MESSAGE: \"SEND_MESSAGE\",\r\n    LOAD_MORE_MESSAGES: \"LOAD_MORE_MESSAGES\",\r\n    REACT_MESSAGE: \"REACT_MESSAGE\",\r\n    REPLY_MESSAGE: \"REPLY_MESSAGE\",\r\n    UPDATE_USER_PROFILE: \"UPDATE_USER_PROFILE\",\r\n    UPDATE_USER_PROFILE_IMAGE: \"UPDATE_USER_PROFILE_IMAGE\",\r\n  }\r\n}\r\n\r\nexport default CONSTANTS\r\n","export const ROW_GUTTER = 16;\r\nexport const SIDE_NAV_WIDTH = 250;\r\nexport const SIDE_NAV_COLLAPSED_WIDTH = 80;\r\nexport const SIDE_NAV_LIGHT = 'SIDE_NAV_LIGHT';\r\nexport const SIDE_NAV_DARK = 'SIDE_NAV_DARK';\r\nexport const NAV_TYPE_SIDE = 'SIDE'\r\nexport const NAV_TYPE_TOP = 'TOP'\r\nexport const DIR_LTR = 'ltr'\r\nexport const DIR_RTL = 'rtl'\r\nexport const HEADER_HEIGHT = 70\r\nexport const FOOTER_HEIGHT = 70\r\n","import React from \"react\";\r\nimport {FormattedMessage, injectIntl} from \"react-intl\";\r\n\r\nconst IntlMessage = props => <FormattedMessage {...props} />;\r\nexport default injectIntl(IntlMessage, {\r\n  withRef: false\r\n});\r\n","import React, { Component } from 'react'\r\n\r\nexport class Icon extends Component {\r\n\trender() {\r\n\t\tconst { type, className  } = this.props;\r\n\t\treturn (\r\n\t\t\t<>{React.createElement(type, { className: className })}</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Icon\r\n","import {\r\n  DashboardOutlined\r\n} from '@ant-design/icons';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nconst dashBoardNavTree = [{\r\n  key: 'home',\r\n  path: `${APP_PREFIX_PATH}/home`,\r\n  title: 'home',\r\n  icon: DashboardOutlined,\r\n  breadcrumb: false,\r\n  submenu: []\r\n}]\r\n\r\nconst navigationConfig = [\r\n  ...dashBoardNavTree,\r\n]\r\n\r\nexport default navigationConfig;\r\n","export const TOGGLE_COLLAPSED_NAV = 'TOGGLE_COLLAPSED_NAV';\r\nexport const CHANGE_LOCALE = 'CHANGE_LOCALE';\r\nexport const SIDE_NAV_STYLE_CHANGE = 'SIDE_NAV_STYLE_CHANGE';\r\nexport const NAV_TYPE_CHANGE = 'NAV_TYPE_CHANGE';\r\nexport const TOP_NAV_COLOR_CHANGE = 'TOP_NAV_COLOR_CHANGE';\r\nexport const HEADER_NAV_COLOR_CHANGE = 'HEADER_NAV_COLOR_CHANGE';\r\nexport const TOGGLE_MOBILE_NAV = 'TOGGLE_MOBILE_NAV';\r\nexport const SWITCH_THEME = 'SWITCH_THEME';\r\nexport const DIRECTION_CHANGE = 'DIRECTION_CHANGE';","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  CHANGE_LOCALE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME,\r\n  DIRECTION_CHANGE\r\n} from '../constants/Theme';\r\n\r\nexport function toggleCollapsedNav(navCollapsed) {\r\n  return {\r\n    type: TOGGLE_COLLAPSED_NAV,\r\n    navCollapsed\r\n  };\r\n}\r\n\r\nexport function onNavStyleChange(sideNavTheme) {\r\n  return {\r\n    type: SIDE_NAV_STYLE_CHANGE,\r\n    sideNavTheme\r\n  };\r\n}\r\n\r\nexport function onLocaleChange(locale) {\r\n  return {\r\n    type: CHANGE_LOCALE,\r\n    locale\r\n  };\r\n}\r\n\r\nexport function onNavTypeChange(navType) {\r\n  return {\r\n    type: NAV_TYPE_CHANGE,\r\n    navType\r\n  };\r\n}\r\n\r\nexport function onTopNavColorChange(topNavColor) {\r\n  return {\r\n    type: TOP_NAV_COLOR_CHANGE,\r\n    topNavColor\r\n  };\r\n}\r\n\r\nexport function onHeaderNavColorChange(headerNavColor) {\r\n  return {\r\n    type: HEADER_NAV_COLOR_CHANGE,\r\n    headerNavColor\r\n  };\r\n}\r\n\r\nexport function onMobileNavToggle(mobileNav) {\r\n  return {\r\n    type: TOGGLE_MOBILE_NAV,\r\n    mobileNav\r\n  };\r\n}\r\n\r\nexport function onSwitchTheme(currentTheme) {\r\n  return {\r\n    type: SWITCH_THEME,\r\n    currentTheme\r\n  };\r\n}\r\n\r\nexport function onDirectionChange(direction) {\r\n  return {\r\n    type: DIRECTION_CHANGE,\r\n    direction\r\n  };\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {Menu, Grid, Avatar} from \"antd\";\r\nimport IntlMessage from \"../util-components/IntlMessage\";\r\nimport Icon from \"../util-components/Icon\";\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport {connect, useDispatch, useSelector} from \"react-redux\";\r\nimport {SIDE_NAV_LIGHT, NAV_TYPE_SIDE} from \"constants/ThemeConstant\";\r\nimport utils from 'utils'\r\nimport {onMobileNavToggle} from \"redux/actions/Theme\";\r\nimport {APP_PREFIX_PATH} from \"../../configs/AppConfig\";\r\nimport {UserOutlined} from \"@ant-design/icons\";\r\nimport {setChatNavigationConfig, setCurrentChat} from \"../../redux/actions/ChatActions\";\r\nimport Utils from \"utils\";\r\nimport CustomMenuItem from \"./CustomComponents/CustomMenuItem\";\r\nimport {env} from \"../../configs/EnvironmentConfig\";\r\n\r\nconst {SubMenu} = Menu;\r\nconst {useBreakpoint} = Grid;\r\n\r\nconst setLocale = (isLocaleOn, localeKey) =>\r\n  isLocaleOn ? <IntlMessage id={localeKey}/> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n  let keyList = [];\r\n  let keyString = \"\";\r\n  if (key) {\r\n    const arr = key.split(\"-\");\r\n    for (let index = 0; index < arr.length; index++) {\r\n      const elm = arr[index];\r\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n      keyList.push(keyString);\r\n    }\r\n  }\r\n  return keyList;\r\n};\r\n\r\nconst SideNavContent = (props) => {\r\n  const {sideNavTheme, hideGroupTitle, localization, onMobileNavToggle} = props;\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n  const dispatch = useDispatch()\r\n  const location = useLocation()\r\n  const history = useHistory()\r\n  const key = Utils.getRouteMongooseId(location.pathname)\r\n\r\n  const {activeUsers, chats} = useSelector(state => {\r\n    return {\r\n      activeUsers: state.userReducer.activeUsers,\r\n      chats: state.chatReducer.chats,\r\n    }\r\n  })\r\n  const [navigationConfig, setNavigationConfig] = useState([])\r\n  const [routeInfo, setRouteInfo] = useState(null)\r\n\r\n  useEffect(() => {\r\n    // if(chats.length<=0){\r\n    //   history.push(`${APP_PREFIX_PATH}/home`)\r\n    //   console.log({history})\r\n    // }\r\n    let currentChat = chats.find(item => item._id === key)\r\n    let config = chats.map(chat => {\r\n      return {\r\n        key: chat._id,\r\n        path: `${APP_PREFIX_PATH}/messages/${chat._id}`,\r\n        title: chat.name,\r\n        avatar: chat.avatar || env.API_ENDPOINT_URL + '/' + chat.members[1].avatar.url,\r\n        breadcrumb: false,\r\n      }\r\n    })\r\n    setNavigationConfig(config)\r\n    setRouteInfo(Utils.getRouteInfo(config, location.pathname))\r\n    Utils.checkObject(currentChat) && dispatch(setCurrentChat(currentChat))\r\n  }, [chats])\r\n\r\n  const onClick = ({item, key, keyPath, selectedKeys, domEvent}) => {\r\n    // console.log({item, key, keyPath, selectedKeys, domEvent})\r\n    let currentChat = chats.find(item => item._id === key)\r\n    dispatch(setCurrentChat(currentChat))\r\n  }\r\n\r\n  const closeMobileNav = () => {\r\n    if (isMobile) {\r\n      onMobileNavToggle(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Menu\r\n      theme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n      mode=\"inline\"\r\n      style={{height: \"100%\", borderRight: 0}}\r\n      defaultSelectedKeys={[key]}\r\n      defaultOpenKeys={setDefaultOpen(key)}\r\n      className={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n      onClick={onClick}\r\n    >\r\n      {navigationConfig.map((menu) =>\r\n          <Menu.Item key={menu.key} style={{\r\n            height: 'fit-content',\r\n            paddingLeft: '20%',\r\n          }}>\r\n            {menu.avatar ? <Avatar src={menu?.avatar} size={56} style={{marginRight: 8}}/> :\r\n              <Avatar icon={<UserOutlined/>} size={56} style={{marginRight: 8}}/>\r\n            }\r\n            <span>{menu?.title}</span>\r\n            {menu.path ? <Link onClick={() => closeMobileNav()} to={menu.path}/> : null}\r\n          </Menu.Item>\r\n        // <CustomMenuItem\r\n        //   key={menu.key}\r\n        //   avatar={menu.avatar}\r\n        //   title={menu.title}\r\n        //   path={menu.path}\r\n        //   closeMobileNav={()=>{\r\n        //     closeMobileNav()\r\n        //   }}\r\n        // />\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst TopNavContent = (props) => {\r\n  const {topNavColor, localization} = props;\r\n  return (\r\n    <Menu mode=\"horizontal\" style={{backgroundColor: topNavColor}}>\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <SubMenu\r\n            key={menu.key}\r\n            popupClassName=\"top-nav-menu\"\r\n            title={\r\n              <span>\r\n        {menu.icon ? <Icon type={menu?.icon}/> : null}\r\n                <span>{setLocale(localization, menu.title)}</span>\r\n          </span>\r\n            }\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n                subMenuFirst.submenu.length > 0 ? (\r\n                  <SubMenu\r\n                    key={subMenuFirst.key}\r\n                    icon={\r\n                      subMenuFirst.icon ? (\r\n                        <Icon type={subMenuFirst?.icon}/>\r\n                      ) : null\r\n                    }\r\n                    title={setLocale(localization, subMenuFirst.title)}\r\n                  >\r\n                    {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                      <Menu.Item key={subMenuSecond.key}>\r\n          <span>\r\n        {setLocale(localization, subMenuSecond.title)}\r\n          </span>\r\n                        <Link to={subMenuSecond.path}/>\r\n                      </Menu.Item>\r\n                    ))}\r\n                  </SubMenu>\r\n                ) : (\r\n                  <Menu.Item key={subMenuFirst.key}>\r\n                    {subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon}/>\r\n                    ) : null}\r\n                    <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                    <Link to={subMenuFirst.path}/>\r\n                  </Menu.Item>\r\n                )\r\n            )}\r\n          </SubMenu>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon}/> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link to={menu.path}/> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n  return props.type === NAV_TYPE_SIDE ? (\r\n    <SideNavContent {...props} />\r\n  ) : (\r\n    <TopNavContent {...props} />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({theme}) => {\r\n  const {sideNavTheme, topNavColor} = theme;\r\n  return {sideNavTheme, topNavColor};\r\n};\r\n\r\nexport default connect(mapStateToProps, {onMobileNavToggle})(MenuContent);\r\n","import React, {useEffect} from \"react\";\r\nimport {Menu, Dropdown, Avatar} from \"antd\";\r\nimport {connect, useDispatch, useSelector} from 'react-redux'\r\nimport {\r\n  EditOutlined,\r\n  SettingOutlined,\r\n  LogoutOutlined\r\n} from '@ant-design/icons';\r\nimport Icon from 'components/util-components/Icon';\r\nimport {signOut} from 'redux/actions/Auth';\r\nimport {APP_PREFIX_PATH} from \"../../configs/AppConfig\";\r\nimport Socket from \"../../socket/Socket\";\r\nimport {env} from \"../../configs/EnvironmentConfig\";\r\n\r\nconst menuItem = [\r\n  {\r\n    title: \"Edit Profile\",\r\n    icon: EditOutlined,\r\n    path: `${APP_PREFIX_PATH}/users/me`\r\n  },\r\n\r\n  {\r\n    title: \"Account Setting\",\r\n    icon: SettingOutlined,\r\n    path: \"/\"\r\n  },\r\n\r\n]\r\n\r\nexport const NavProfile = () => {\r\n  const userInfo = useSelector(state => {\r\n    return state.auth.userInfo\r\n  })\r\n  const dispatch = useDispatch()\r\n\r\n  const onSignOut = () => {\r\n    Socket.emitLogout(userInfo)\r\n    dispatch(signOut())\r\n  }\r\n\r\n  const profileImg = env.API_ENDPOINT_URL + '/' + userInfo.avatar.url;\r\n  const profileMenu = (\r\n    <div className=\"nav-profile nav-dropdown\">\r\n      <div className=\"nav-profile-header\">\r\n        <div className=\"d-flex\">\r\n          <Avatar size={45} src={profileImg}/>\r\n          <div className=\"pl-3\">\r\n            <h4 className=\"mb-0\">{userInfo.fullName}</h4>\r\n            <span className=\"text-muted\">{userInfo.role}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"nav-profile-body\">\r\n        <Menu>\r\n          {menuItem.map((el, i) => {\r\n            return (\r\n              <Menu.Item key={i}>\r\n                <a href={el.path}>\r\n                  <Icon className=\"mr-3\" type={el.icon}/>\r\n                  <span className=\"font-weight-normal\">{el.title}</span>\r\n                </a>\r\n              </Menu.Item>\r\n            );\r\n          })}\r\n          <Menu.Item key={menuItem.length + 1} onClick={e => onSignOut()}>\r\n            <span>\r\n              <LogoutOutlined className=\"mr-3\"/>\r\n              <span className=\"font-weight-normal\">Sign Out</span>\r\n            </span>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </div>\r\n    </div>\r\n  );\r\n  return (\r\n    <Dropdown placement=\"bottomRight\" overlay={profileMenu} trigger={[\"click\"]}>\r\n      <Menu className=\"d-flex align-item-center\" mode=\"horizontal\">\r\n        <Menu.Item>\r\n          <Avatar src={profileImg}/>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Dropdown>\r\n  );\r\n}\r\n\r\nexport default connect(null, {signOut})(NavProfile)\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Avatar, Button, Grid, Layout, Space, Input, Modal, List, Tag} from 'antd';\r\nimport {connect, useDispatch, useSelector} from 'react-redux';\r\nimport {SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE} from 'constants/ThemeConstant';\r\nimport {Scrollbars} from 'react-custom-scrollbars';\r\nimport MenuContent from './MenuContent'\r\nimport utils from \"../../utils\";\r\nimport {NavProfile} from \"./NavProfile\";\r\nimport {EditOutlined, SearchOutlined, CheckCircleTwoTone} from \"@ant-design/icons\";\r\nimport '../../assets/styles/style.css'\r\nimport Socket from \"../../socket/Socket\";\r\n\r\nconst {Sider} = Layout;\r\nconst {useBreakpoint} = Grid;\r\nconst {Search} = Input\r\n\r\nexport const SideNav = ({navCollapsed, sideNavTheme, routeInfo, hideGroupTitle, localization = true}) => {\r\n  const dispatch = useDispatch()\r\n  const props = {sideNavTheme, routeInfo, hideGroupTitle, localization}\r\n  const screens = utils.getBreakPoint(useBreakpoint());\r\n  const isMobile = !screens.includes('lg')\r\n  const {activeUsers, userInfo} = useSelector(state => {\r\n    return {\r\n      activeUsers: state.userReducer.activeUsers,\r\n      userInfo: state.auth.userInfo\r\n    }\r\n  })\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [userModalList, setUserModalList] = useState([])\r\n\r\n  useEffect(() => {\r\n    let array = activeUsers.filter(item => item._id !== userInfo._id).map(item => {\r\n      return {...item, isSelected: false}\r\n    })\r\n    setUserModalList(array)\r\n  }, [activeUsers, userInfo])\r\n\r\n  const resetState = () => {\r\n    let array = activeUsers.map(item => {\r\n      return {...item, isSelected: false}\r\n    })\r\n    setUserModalList(array)\r\n  }\r\n\r\n  const onSearch = () => {\r\n\r\n  }\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  }\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n    let array = [...userModalList.filter(item => item.isSelected === true), userInfo]\r\n    Socket.emitCreateNewChat(array)\r\n    resetState()\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    resetState()\r\n  }\r\n\r\n  const onSelect = (item) => {\r\n    let array = [...userModalList]\r\n    let obj = array.find(i => i._id === item._id)\r\n    obj.isSelected = !obj.isSelected\r\n    setUserModalList(array)\r\n  }\r\n\r\n  const renderItems = item => (\r\n    <div className={\"clickable-list-item\"} onClick={() => {\r\n      onSelect(item)\r\n    }}>\r\n      <List.Item extra={item.isSelected ? <CheckCircleTwoTone twoToneColor=\"#52c41a\" size={\"large\"}/> : <></>}>\r\n        <List.Item.Meta\r\n          className={\"d-flex align-items-center\"}\r\n          avatar={<Avatar src={item.avatar} size={\"large\"}/>}\r\n          title={<span>{item.fullName}</span>}\r\n        />\r\n      </List.Item>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <Sider\r\n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK ? 'side-nav-dark' : ''}`}\r\n      width={SIDE_NAV_WIDTH}\r\n      collapsed={isMobile}\r\n      style={{top: 0, height: '100%'}}\r\n    >\r\n      <div\r\n        className={`side-nav-header d-flex align-items-center ${isMobile ? 'justify-content-center' : 'justify-content-between'}`}\r\n        style={{padding: '0px 8px', margin: '4px 0 8px 0'}}>\r\n        {!isMobile && <>\r\n          <NavProfile/>\r\n          <span className={\"font-weight-bold\"}>Clone</span>\r\n        </>}\r\n        <Button shape={\"circle\"} icon={<EditOutlined/>} onClick={showModal}/>\r\n      </div>\r\n      {!isMobile && <Space direction={\"vertical\"} style={{width: '100%', padding: '0px 8px', margin: '4px 0 8px 0'}}>\r\n        <Search placeholder=\"Search...\" size={\"small\"} onSearch={onSearch}\r\n                enterButton={<Button icon={<SearchOutlined/>}/>}/>\r\n      </Space>}\r\n      <Scrollbars autoHide>\r\n        <MenuContent\r\n          type={NAV_TYPE_SIDE}\r\n          {...props}\r\n        />\r\n      </Scrollbars>\r\n      <Modal title=\"Create new conversation\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}\r\n             afterClose={handleClose}>\r\n        <div className={\"d-flex flex-row align-items-center\"}>\r\n          <span className={'font-weight-bold'}>To: </span>\r\n          {userModalList.filter(item => item.isSelected === true).map((item, index) => {\r\n            return (\r\n              <Tag key={index}>{item.fullName}</Tag>\r\n            )\r\n          })}\r\n        </div>\r\n        <List\r\n          itemLayout=\"horizontal\"\r\n          dataSource={userModalList}\r\n          renderItem={renderItems}\r\n          split={false}\r\n        />\r\n      </Modal>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({theme}) => {\r\n  const {navCollapsed, sideNavTheme} = theme;\r\n  return {navCollapsed, sideNavTheme}\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst Icon = <LoadingOutlined style={{ fontSize: 35 }} spin />\r\n\r\nconst Loading = (props) => {\r\n\tconst { align, cover } = props\r\n\treturn (\r\n\t\t<div className={`loading text-${align} cover-${cover}`}>\r\n\t\t\t<Spin indicator={Icon} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nLoading.propTypes = {\r\n\tsize: PropTypes.string,\r\n\tcover: PropTypes.string\r\n}\r\n\r\nLoading.defaultProps = {\r\n\talign: 'center',\r\n\tcover: 'inline'\r\n};\r\n\r\nexport default Loading","import React from 'react'\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport { APP_NAME } from 'configs/AppConfig';\r\nimport { connect } from \"react-redux\";\r\nimport utils from 'utils';\r\nimport { Grid } from 'antd';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst getLogoWidthGutter = (props, isMobile) => {\r\n  const { navCollapsed, navType } = props;\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  if(isMobile && !props.mobileLogo) {\r\n    return 0\r\n  }\r\n  if(isNavTop) {\r\n    return 'auto'\r\n  }\r\n  if(navCollapsed) {\r\n    return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n  } else {\r\n    return `${SIDE_NAV_WIDTH}px`\r\n  }\r\n}\r\n\r\nconst getLogo = (props) => {\r\n  const { navCollapsed, logoType } = props;\r\n  if(logoType === 'light') {\r\n    if(navCollapsed) {\r\n      return '/img/logo-sm-white.png'\r\n    }\r\n    return '/img/logo-white.png'\r\n  }\r\n\r\n  if (navCollapsed) {\r\n    return '/img/logo-sm.png'\r\n  }\r\n  return '/img/logo.png'\r\n}\r\n\r\nconst getLogoDisplay = (isMobile, mobileLogo) => {\r\n  if(isMobile && !mobileLogo) {\r\n    return 'd-none'\r\n  } else {\r\n    return 'logo'\r\n  }\r\n}\r\n\r\nexport const Logo = (props) => {\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n  return (\r\n    <div\r\n      className={getLogoDisplay(isMobile, props.mobileLogo)} \r\n      style={{width: `${getLogoWidthGutter(props, isMobile)}`}}>\r\n      <img src={getLogo(props)} alt={`${APP_NAME} logo`}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType } =  theme;\r\n  return { navCollapsed, navType }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Logo);\r\n","import React from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\nimport Logo from \"./Logo\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\n\r\nexport const MobileNav = ({\r\n  sideNavTheme,\r\n  mobileNav,\r\n  onMobileNavToggle,\r\n  routeInfo,\r\n  hideGroupTitle,\r\n  localization = true,\r\n}) => {\r\n  const props = { sideNavTheme, routeInfo, hideGroupTitle, localization };\r\n\r\n  const onClose = () => {\r\n    onMobileNavToggle(false);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      placement=\"left\"\r\n      closable={false}\r\n      onClose={onClose}\r\n      visible={mobileNav}\r\n      bodyStyle={{ padding: 5 }}\r\n    >\r\n      <Flex flexDirection=\"column\" className=\"h-100\">\r\n        <Flex justifyContent=\"between\" alignItems=\"center\">\r\n          <Logo mobileLogo={true} />\r\n          <div className=\"nav-close\" onClick={() => onClose()}>\r\n            <ArrowLeftOutlined />\r\n          </div>\r\n        </Flex>\r\n        <div className=\"mobile-nav-menu\">\r\n          <Scrollbars autoHide>\r\n            <MenuContent type={NAV_TYPE_SIDE} {...props} />\r\n          </Scrollbars>\r\n        </div>\r\n      </Flex>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme, mobileNav } = theme;\r\n  return { navCollapsed, sideNavTheme, mobileNav };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MobileNav);\r\n","import React, {lazy, Suspense, useEffect} from \"react\";\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport {APP_PREFIX_PATH} from 'configs/AppConfig'\r\nimport {useDispatch, useStore} from \"react-redux\";\r\nimport JwtAuthService from \"../../services/JwtAuthService\";\r\nimport {authenticated, setUserInfo} from \"../../redux/actions/Auth\";\r\nimport Socket from \"../../socket/Socket\";\r\n\r\nconst Preloader = () => {\r\n  console.log(\"Preloader called\")\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    Socket.emitGetActiveUsers()\r\n    Socket.emitGetChats()\r\n    JwtAuthService.getMe().then(res => {\r\n      if (res.data.accessToken) {\r\n        dispatch(authenticated(res.data.accessToken))\r\n        dispatch(setUserInfo(res.data.user))\r\n      } else {\r\n        dispatch(authenticated(\"\"))\r\n        dispatch(setUserInfo({}))\r\n      }\r\n    })\r\n  })\r\n\r\n  return (\r\n    <></>\r\n  )\r\n}\r\n\r\nexport const AppViews = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const dispatchAction = (action) => {\r\n    console.log(\"User action: \", action)\r\n    dispatch(action)\r\n  }\r\n\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"content\"/>}>\r\n      <Preloader/>\r\n      <Switch>\r\n        <Route path={`${APP_PREFIX_PATH}/home`} component={lazy(() => import(`./home`))}/>\r\n        <Route path={`${APP_PREFIX_PATH}/users/me`} component={lazy(() => import(`./profile`))}/>\r\n        <Route path={`${APP_PREFIX_PATH}/messages/:id`} component={lazy(() => import(`./chat`))}/>\r\n        <Redirect from={`${APP_PREFIX_PATH}`} to={`${APP_PREFIX_PATH}/home`}/>\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default React.memo(AppViews);\r\n","import React, {useState} from \"react\";\r\nimport {Avatar, Button, Dropdown, Layout, Menu} from \"antd\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {UserOutlined, PhoneFilled, VideoCameraFilled, SearchOutlined, MoreOutlined} from \"@ant-design/icons\";\r\nimport Modal from \"antd/es/modal/Modal\";\r\nimport Socket from \"../../../socket/Socket\";\r\n\r\nconst {Header} = Layout\r\n\r\nconst CustomHeader = () => {\r\n  const currentChat = useSelector(state => {\r\n    return state.chatReducer.currentChat\r\n  })\r\n  const iconStyle = {\r\n    color: '#007aff',\r\n    fontSize: 24,\r\n  }\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n    Socket.emitDeleteChat(currentChat._id)\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleOnClick = (event) => {\r\n    console.log({event: event})\r\n    switch (event.key) {\r\n      case \"0\":\r\n        console.log('Delete')\r\n        showModal()\r\n        break\r\n      case \"1\":\r\n        console.log(\"Option\")\r\n        break\r\n      case \"2\":\r\n        console.log(\"Another option\")\r\n        break\r\n      default:\r\n        console.log(\"Test\")\r\n        break\r\n    }\r\n  }\r\n\r\n  const menu = (\r\n    <Menu onClick={handleOnClick}>\r\n      <Menu.Item key={0}>\r\n        Delete\r\n      </Menu.Item>\r\n      <Menu.Item key={1}>\r\n        Option\r\n      </Menu.Item>\r\n      <Menu.Item key={2}>\r\n        Another Option\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n  return (\r\n    <Header className={'d-flex flex-row justify-content-between align-items-center pr-3 pl-3'} style={{\r\n      backgroundColor: '#fff',\r\n    }}>\r\n      <Modal title=\"Basic Modal\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel} okText={\"Delete\"}>\r\n        <p>Are you sure to delete this chat?</p>\r\n      </Modal>\r\n      <div className={'d-flex flex-row align-items-center'}>\r\n        {currentChat.avatar ? <Avatar src={currentChat.avatar.url} size={56} style={{marginRight: 8}}/> :\r\n          <Avatar className={'mr-2'} icon={<UserOutlined/>} size={56}/>}\r\n        <h4 className={'font-weight-bold'}>{currentChat.name}</h4>\r\n      </div>\r\n      <div className={'d-flex flex-row align-items-center'}>\r\n        <PhoneFilled className={'mr-2 ml-2'} style={iconStyle}/>\r\n        <VideoCameraFilled className={'mr-2 ml-2'} style={iconStyle}/>\r\n        <SearchOutlined className={'mr-0 ml-2'} style={iconStyle}/>\r\n        <Dropdown overlay={menu} placement=\"bottomLeft\" arrow trigger={['click']}>\r\n          <MoreOutlined className={'mr-1 ml-1'} style={iconStyle} onClick={() => {\r\n          }}/>\r\n        </Dropdown>\r\n\r\n      </div>\r\n    </Header>\r\n  )\r\n}\r\n\r\nexport default CustomHeader\r\n","import React from \"react\";\r\nimport {CloseCircleOutlined, RetweetOutlined} from \"@ant-design/icons\";\r\nimport CONSTANTS from \"../../../utils/constants\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setCurrentRepliedMessage} from \"../../../redux/actions/ChatActions\";\r\n\r\nconst CurrentRepliedMessagePreview = () => {\r\n  const dispatch = useDispatch()\r\n  const currentRepliedMessage = useSelector(state => {\r\n    return state.chatReducer.currentRepliedMessage\r\n  })\r\n\r\n  const onCloseReplyingMessage = () => {\r\n    dispatch(setCurrentRepliedMessage({}))\r\n  }\r\n  return (\r\n    <>\r\n      {Object.keys(currentRepliedMessage).length > 0 &&\r\n      <div className={'mr-1 ml-1 mt-1 pl-3 pr-3 pt-2 pb-2'} style={{\r\n        backgroundColor: '#ebebeb',\r\n        borderRadius: 16,\r\n        position: 'relative'\r\n      }}>\r\n        <p className={'mb-0'}>\r\n          <RetweetOutlined className={`align-self-center`}/> Replying to <span\r\n          className={'font-weight-bold'}>{currentRepliedMessage.sender.fullName}</span>\r\n        </p>\r\n        <p className={'mb-0'} style={{color: '#000'}}>{currentRepliedMessage.message}</p>\r\n        <CloseCircleOutlined\r\n          className={'mt-2 mr-2'}\r\n          style={{\r\n            position: 'absolute',\r\n            top: 0,\r\n            right: 0,\r\n            fontSize: CONSTANTS.STYLES.ICON_SIZE,\r\n          }} onClick={onCloseReplyingMessage}/>\r\n      </div>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CurrentRepliedMessagePreview\r\n","import React, {useEffect, useRef, useState} from \"react\";\r\nimport {Button, Input} from \"antd\";\r\nimport {SendOutlined, CloseCircleOutlined, RetweetOutlined, FileOutlined} from \"@ant-design/icons\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Socket from \"../../../socket/Socket\";\r\nimport {setCurrentRepliedMessage} from \"../../../redux/actions/ChatActions\";\r\nimport CONSTANTS from \"../../../utils/constants\";\r\nimport CurrentRepliedMessagePreview from \"./CurrentRepliedMessagePreview\";\r\n\r\nconst CustomFooter = () => {\r\n  const dispatch = useDispatch()\r\n  const [message, setMessage] = useState(\"\")\r\n  const [chosenFiles, setChosenFiles] = useState([])\r\n  const {currentChat, userInfo, currentRepliedMessage} = useSelector(state => {\r\n    return {\r\n      currentChat: state.chatReducer.currentChat,\r\n      userInfo: state.auth.userInfo,\r\n      currentRepliedMessage: state.chatReducer.currentRepliedMessage,\r\n    }\r\n  })\r\n  const inputRef = useRef()\r\n  const inputFileRef = useRef()\r\n\r\n  useEffect(() => {\r\n    currentRepliedMessage && Object.keys(currentRepliedMessage).length > 0 && inputRef.current?.focus()\r\n  }, [currentRepliedMessage])\r\n\r\n  const onChange = (event) => {\r\n    // setMessage()\r\n    setMessage(event.target.value)\r\n  }\r\n\r\n  const onPressEnter = () => {\r\n    if (message !== \"\") {\r\n      let messageObj = {\r\n        chat: currentChat._id,\r\n        message: message,\r\n        sender: userInfo._id,\r\n        createdAt: new Date(Date.now()),\r\n        repliesTo: currentRepliedMessage._id\r\n      }\r\n      console.log({messageObj})\r\n      Socket.emitSendMessage(messageObj)\r\n      setMessage(\"\")\r\n      dispatch(setCurrentRepliedMessage({}))\r\n    }\r\n  }\r\n\r\n  const onOpenFilePicker = (event) => {\r\n    inputFileRef.current?.click()\r\n\r\n  }\r\n\r\n  const onChooseFile = (event) => {\r\n    let files = event.target.files\r\n    console.log({files})\r\n\r\n\r\n    for(let file in files){\r\n      let reader = new FileReader()\r\n      reader.onload = (event) => {\r\n        console.log(event.target.result)\r\n      }\r\n      const fileData = files[file]\r\n      fileData && typeof fileData === 'object' && reader.readAsArrayBuffer(fileData)\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className={'d-flex flex-row align-items-center'} style={{width: '100%'}}>\r\n      <div className={'mr-3 ml-3 mb-3 flex-grow-1'} style={{\r\n        backgroundColor: '#f5f5f5',\r\n        borderRadius: 16,\r\n      }}>\r\n        <CurrentRepliedMessagePreview/>\r\n        <input ref={inputFileRef} onChange={onChooseFile} type={'file'} multiple={true}\r\n               style={{display: 'none', visibility: 'hidden',}}/>\r\n        <Input\r\n          ref={inputRef}\r\n          bordered={false}\r\n          size={\"middle\"}\r\n          placeholder={\"Type a message...\"}\r\n          suffix={<div className={'d-flex flex-row'}>\r\n            <FileOutlined onClick={onOpenFilePicker} style={{fontSize: CONSTANTS.STYLES.ICON_SIZE}}/>\r\n          </div>}\r\n\r\n          style={{\r\n            borderRadius: 50,\r\n          }}\r\n          onChange={onChange}\r\n          value={message}\r\n          onPressEnter={onPressEnter}\r\n        />\r\n\r\n      </div>\r\n      <SendOutlined className={'align-self-end mb-3 mr-3'} style={{color: '#007aff', fontSize: 24}}\r\n                    onClick={onPressEnter}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CustomFooter\r\n","import React from 'react';\r\nimport {connect, useSelector} from 'react-redux';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport AppViews from 'views/app-views';\r\nimport {\r\n  Layout,\r\n  Grid,\r\n} from \"antd\";\r\n\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport {\r\n  SIDE_NAV_WIDTH,\r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP,\r\n  DIR_RTL,\r\n  DIR_LTR, FOOTER_HEIGHT, HEADER_HEIGHT\r\n} from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\nimport {useThemeSwitcher} from \"react-css-theme-switcher\";\r\nimport CustomHeader from \"../../components/layout-components/CustomComponents/CustomHeader\";\r\nimport CustomFooter from \"../../components/layout-components/CustomComponents/CustomFooter\";\r\nimport Utils from \"utils\";\r\n\r\nconst {Content, Header, Footer} = Layout;\r\nconst {useBreakpoint} = Grid;\r\n\r\nexport const AppLayout = ({navCollapsed, navType, location, direction}) => {\r\n  const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname)\r\n  const screens = utils.getBreakPoint(useBreakpoint());\r\n  const isMobile = !screens.includes('lg')\r\n  const isNavSide = navType === NAV_TYPE_SIDE\r\n  const isNavTop = navType === NAV_TYPE_TOP\r\n  const currentChat = useSelector(state=>{\r\n    return state.chatReducer.currentChat\r\n  })\r\n  const getLayoutGutter = () => {\r\n    if (isNavTop || isMobile) {\r\n      return SIDE_NAV_COLLAPSED_WIDTH\r\n    }\r\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH\r\n  }\r\n\r\n  const {status} = useThemeSwitcher();\r\n\r\n  if (status === 'loading') {\r\n    return <Loading cover=\"page\"/>;\r\n  }\r\n\r\n  const getLayoutDirectionGutter = () => {\r\n    if (direction === DIR_LTR) {\r\n      return {paddingLeft: getLayoutGutter()}\r\n    }\r\n    if (direction === DIR_RTL) {\r\n      return {paddingRight: getLayoutGutter()}\r\n    }\r\n    return {paddingLeft: getLayoutGutter()}\r\n  }\r\n\r\n\r\n  return (\r\n    <Layout style={{height: \"100%\"}}>\r\n      <SideNav routeInfo={currentRouteInfo}/>\r\n      <Layout className=\"app-container\"\r\n              style={{height: '100%', overflow: 'hidden', display: 'flex', flexDirection: 'column',...getLayoutDirectionGutter(), }}>\r\n        {Utils.checkObject(currentChat) && <CustomHeader/>}\r\n        <div className=\"app-layout my-app-layout\"\r\n                style={{overflow: 'hidden', flexGrow: 1, height: '100%'}}>\r\n          {/*<div className={`app-content ${isNavTop ? 'layout-top-nav' : ''}`} style={{marginTop: 0}}>*/}\r\n          {/*  /!*<PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title}/>*!/*/}\r\n          {/*  <Content>*/}\r\n          {/*  </Content>*/}\r\n          {/*</div>*/}\r\n          <AppViews/>\r\n        </div>\r\n        {/*<Footer style={{backgroundColor: 'lightgreen', height: FOOTER_HEIGHT}}/>*/}\r\n        {Utils.checkObject(currentChat) && <CustomFooter/>}\r\n      </Layout>\r\n      {isMobile && <MobileNav/>}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({theme}) => {\r\n  const {navCollapsed, navType, locale} = theme;\r\n  return {navCollapsed, navType, locale}\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"page\"/>}>\r\n      <Switch>\r\n        <Route path={`${AUTH_PREFIX_PATH}/login`} component={lazy(() => import(`./authentication/login`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-1`} component={lazy(() => import(`./authentication/login-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-2`} component={lazy(() => import(`./authentication/login-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-1`} component={lazy(() => import(`./authentication/register-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-2`} component={lazy(() => import(`./authentication/register-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/forgot-password`} component={lazy(() => import(`./authentication/forgot-password`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-1`} component={lazy(() => import(`./errors/error-page-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-2`} component={lazy(() => import(`./errors/error-page-2`))} />\r\n        <Redirect from={`${AUTH_PREFIX_PATH}`} to={`${AUTH_PREFIX_PATH}/login`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default AppViews;\r\n\r\n","import React from 'react'\r\nimport { Switch, Route, } from \"react-router-dom\";\r\nimport AuthViews from 'views/auth-views'\r\n\r\nexport const AuthLayout = () => {\r\n\treturn (\r\n\t\t<div className=\"auth-container\">\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"\" component={AuthViews} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default AuthLayout\r\n","import antdEnUS from 'antd/es/locale/en_US';\r\nimport enMsg from \"../locales/en_US.json\";\r\n\r\nconst EnLang = {\r\n  antd: antdEnUS,\r\n  locale: 'en-US',\r\n  messages: {\r\n    ...enMsg\r\n  },\r\n};\r\nexport default EnLang;\r\n","import antdZhCn from 'antd/es/locale/zh_CN';\r\nimport zhMsg from \"../locales/zh_CN.json\";\r\n\r\nconst ZhLang = {\r\n  antd: antdZhCn,\r\n  locale: 'zh',\r\n  messages: {\r\n    ...zhMsg\r\n  },\r\n};\r\nexport default ZhLang;\r\n","import antdFrFR from 'antd/es/locale/fr_FR';\r\nimport frMsg from \"../locales/fr_FR.json\";\r\n\r\nconst FrLang = {\r\n  antd: antdFrFR,\r\n  locale: 'fr-FR',\r\n  messages: {\r\n    ...frMsg\r\n  },\r\n};\r\nexport default FrLang;\r\n","import enLang from './entries/en_US';\r\nimport zhLang from './entries/zh_CN';\r\nimport frLang from './entries/fr_FR';\r\nimport jaLang from './entries/ja_JP'\r\n\r\nconst AppLocale = {\r\n    en: enLang,\r\n    zh: zhLang,\r\n    fr: frLang,\r\n    ja: jaLang\r\n};\r\n\r\nexport default AppLocale;","import antdJaJP from 'antd/es/locale/ja_JP';\r\nimport jaMsg from \"../locales/ja_JP.json\";\r\n\r\nconst JaLang = {\r\n  antd: antdJaJP,\r\n  locale: 'ja-JP',\r\n  messages: {\r\n    ...jaMsg\r\n  },\r\n};\r\nexport default JaLang;\r\n","import {useEffect} from 'react';\r\n\r\nconst addBodyClass = className => document.body.classList.add(className);\r\nconst removeBodyClass = className => document.body.classList.remove(className);\r\n\r\nexport default function useBodyClass(className) {\r\n    useEffect(\r\n\t\t\t() => {\r\n\t\t\t\t// Set up\r\n\t\t\t\tclassName instanceof Array ? className.map(addBodyClass) : addBodyClass(className);\r\n\r\n\t\t\t\t// Clean up\r\n\t\t\t\treturn () => {\r\n\t\t\t\t\t\tclassName instanceof Array ? className.map(removeBodyClass) : removeBodyClass(className);\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\t[className]\r\n    );\r\n}","import React from \"react\";\r\nimport {Redirect, Route} from \"react-router-dom\";\r\nimport {AUTH_PREFIX_PATH} from \"../../configs/AppConfig\";\r\n\r\nconst ProtectedRoute = (props)=>{\r\n  return(\r\n    <Route path={props.path}>\r\n      {props.isAuthenticated? (props.children): (<Redirect to={AUTH_PREFIX_PATH}/>)}\r\n    </Route>\r\n  )\r\n}\r\n\r\nexport default ProtectedRoute\r\n","import React, {Suspense} from \"react\";\r\nimport {Route, Switch, Redirect, withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport AppLayout from \"layouts/app-layout\";\r\nimport AuthLayout from 'layouts/auth-layout';\r\nimport AppLocale from \"lang\";\r\nimport {IntlProvider} from \"react-intl\";\r\nimport {ConfigProvider} from 'antd';\r\nimport {APP_PREFIX_PATH, AUTH_PREFIX_PATH} from 'configs/AppConfig'\r\nimport useBodyClass from 'hooks/useBodyClass';\r\nimport ProtectedRoute from \"./components/ProtectedRoute\";\r\nimport {AUTH_TOKEN} from \"../redux/constants/Auth\";\r\n\r\nexport const Views = (props) => {\r\n  const {locale, location, direction} = props;\r\n  const currentAppLocale = AppLocale[locale];\r\n  useBodyClass(`dir-${direction}`);\r\n\r\n  let accessToken = sessionStorage.getItem(AUTH_TOKEN)\r\n  let isAuthenticated = accessToken !== \"\" && accessToken !== null && accessToken !== undefined\r\n\r\n  return (\r\n    <IntlProvider\r\n      locale={currentAppLocale.locale}\r\n      messages={currentAppLocale.messages}>\r\n      <ConfigProvider locale={currentAppLocale.antd} direction={direction}>\r\n        <Suspense fallback={<h1>Loading...</h1>}>\r\n          {/*<SocketListener/>*/}\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Redirect to={APP_PREFIX_PATH}/>\r\n            </Route>\r\n            <Route path={AUTH_PREFIX_PATH}>\r\n              <AuthLayout direction={direction}/>\r\n            </Route>\r\n            <ProtectedRoute path={APP_PREFIX_PATH} isAuthenticated={isAuthenticated}>\r\n              <AppLayout direction={direction} location={location}/>\r\n            </ProtectedRoute>\r\n          </Switch>\r\n        </Suspense>\r\n\r\n      </ConfigProvider>\r\n    </IntlProvider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({theme, auth}) => {\r\n  const {locale, direction} = theme;\r\n  const {token} = auth;\r\n  return {locale, token, direction}\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(Views));\r\n","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector, useStore} from 'react-redux';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport Views from './views';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport Socket from \"./socket/Socket\";\r\n\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch()\r\n  const dispatchAction = (action) => {\r\n    console.log(\"action: \", action)\r\n    dispatch(action)\r\n  }\r\n  useEffect(() => {\r\n    Socket.onConnect()\r\n    Socket.onGetActiveUsers(dispatchAction)\r\n    Socket.onCreateNewChat(dispatchAction)\r\n    Socket.onGetChats(dispatchAction)\r\n    Socket.onGetCurrentChatMessages(dispatchAction)\r\n    Socket.onSendMessage(dispatchAction)\r\n    Socket.onDeleteChat(dispatchAction)\r\n  })\r\n  return (\r\n    <div className=\"App\" style={{height: '100%'}}>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/\" component={Views}/>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {\r\n\tAUTH_TOKEN,\r\n\tAUTHENTICATED,\r\n\tSHOW_AUTH_MESSAGE,\r\n\tHIDE_AUTH_MESSAGE,\r\n\tSIGNOUT_SUCCESS,\r\n\tSIGNUP_SUCCESS,\r\n\tSHOW_LOADING,\r\n\tHIDE_LOADING,\r\n\tSIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n\tSIGNIN_WITH_FACEBOOK_AUTHENTICATED,\r\n\tSET_USER_INFO, SIGNOUT\r\n} from '../constants/Auth';\r\n\r\nconst initState = {\r\n  loading: false,\r\n  message: '',\r\n  showMessage: false,\r\n  redirect: '',\r\n  token: sessionStorage.getItem(AUTH_TOKEN),\r\n\tuserInfo: {}\r\n}\r\n\r\nconst auth = (state = initState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase AUTHENTICATED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\tcase SHOW_AUTH_MESSAGE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: action.message,\r\n\t\t\t\tshowMessage: true,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase HIDE_AUTH_MESSAGE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: '',\r\n\t\t\t\tshowMessage: false,\r\n\t\t\t}\r\n\t\tcase SIGNOUT:\r\n\t\tcase SIGNOUT_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: null,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNUP_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t  ...state,\r\n\t\t\t  loading: false,\r\n\t\t\t  token: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SHOW_LOADING: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase HIDE_LOADING: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_GOOGLE_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_FACEBOOK_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SET_USER_INFO:{\r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\tuserInfo: action.payload\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default auth\r\n","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  CHANGE_LOCALE,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME,\r\n  DIRECTION_CHANGE\r\n} from '../constants/Theme';\r\nimport { THEME_CONFIG } from 'configs/AppConfig'\r\n\r\nconst initTheme = {\r\n  ...THEME_CONFIG\r\n};\r\n\r\nconst theme = (state = initTheme, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_COLLAPSED_NAV:\r\n      return {\r\n        ...state,\r\n        navCollapsed: action.navCollapsed\r\n      };\r\n    case SIDE_NAV_STYLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        sideNavTheme: action.sideNavTheme\r\n      };\r\n    case CHANGE_LOCALE:\r\n      return {\r\n        ...state,\r\n        locale: action.locale\r\n      };\r\n    case NAV_TYPE_CHANGE:\r\n      return {\r\n        ...state,\r\n        navType: action.navType\r\n      };\r\n    case TOP_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        topNavColor: action.topNavColor\r\n      };\r\n    case HEADER_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        headerNavColor: action.headerNavColor\r\n      };\r\n    case TOGGLE_MOBILE_NAV:\r\n      return {\r\n        ...state,\r\n        mobileNav: action.mobileNav\r\n      };\r\n    case SWITCH_THEME:\r\n      return {\r\n        ...state,\r\n        currentTheme: action.currentTheme\r\n      }\r\n    case DIRECTION_CHANGE:\r\n      return {\r\n        ...state,\r\n        direction: action.direction\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default theme","import {SET_ACTIVE_USERS} from \"../constants/User\";\r\n\r\nconst initState = {\r\n  activeUsers: []\r\n}\r\n\r\nconst UserReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case SET_ACTIVE_USERS:\r\n      return {\r\n        ...state,\r\n        activeUsers: action.payload\r\n      }\r\n    default:\r\n      return {...state}\r\n\r\n  }\r\n}\r\n\r\nexport default UserReducer\r\n","import {\r\n  SET_CHATS,\r\n  ADD_CHAT,\r\n  SET_CURRENT_CHAT_MESSAGES,\r\n  SET_CURRENT_CHAT,\r\n  ADD_MESSAGE,\r\n  LOAD_MORE_MESSAGES, UPDATE_MESSAGE, SET_CURRENT_REPLIED_MESSAGE, DELETE_CHAT\r\n} from \"../constants/Chat\";\r\nimport Utils from \"../../utils\";\r\n\r\nconst initState = {\r\n  chats: [],\r\n  currentChat: {},\r\n  currentChatMessages: [],\r\n  currentRepliedMessage: {}\r\n}\r\n\r\nconst ChatReducer = (state = initState, action) => {\r\n  let currentChatMessagesClone = [...state.currentChatMessages]\r\n  let chatsClone = [...state.chats]\r\n\r\n  switch (action.type) {\r\n    case SET_CHATS:\r\n      return {...state, chats: action.payload}\r\n\r\n    case ADD_CHAT:\r\n      chatsClone.unshift(action.payload)\r\n      return {...state, chats: chatsClone}\r\n\r\n    case SET_CURRENT_CHAT:\r\n      return {...state, currentChat: action.payload, currentRepliedMessage: {}}\r\n\r\n    case SET_CURRENT_CHAT_MESSAGES:\r\n      return {...state, currentChatMessages: action.payload, currentRepliedMessage: {}}\r\n\r\n    case ADD_MESSAGE:\r\n      action.payload.chat === state.currentChat._id && currentChatMessagesClone.push(action.payload)\r\n      return {...state, currentChatMessages: currentChatMessagesClone}\r\n\r\n    case LOAD_MORE_MESSAGES:\r\n      return {...state, currentChatMessages: Utils.removeDuplicate(action.payload.concat(state.currentChatMessages))}\r\n\r\n    case UPDATE_MESSAGE:\r\n      let index = state.currentChatMessages.findIndex(item => item._id === action.payload._id)\r\n      currentChatMessagesClone[index] = action.payload\r\n      return {...state, currentChatMessages: currentChatMessagesClone}\r\n\r\n    case SET_CURRENT_REPLIED_MESSAGE:\r\n      return {...state, currentRepliedMessage: action.payload}\r\n\r\n    case DELETE_CHAT:\r\n      chatsClone = chatsClone.filter(item => item._id !== action.payload)\r\n      return {...state, chats: chatsClone, currentChat: {}, currentChatMessages: [], currentRepliedMessage: {}}\r\n\r\n    default:\r\n      return {...state}\r\n  }\r\n}\r\n\r\nexport default ChatReducer\r\n","import {combineReducers} from 'redux';\r\nimport Auth from './Auth';\r\nimport Theme from './Theme';\r\nimport UserReducer from \"./UserReducer\";\r\nimport ChatReducer from \"./ChatReducer\";\r\n\r\nconst reducers = combineReducers({\r\n  theme: Theme,\r\n  auth: Auth,\r\n  userReducer: UserReducer,\r\n  chatReducer: ChatReducer\r\n});\r\n\r\nexport default reducers;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\nimport reducers from \"./redux/reducers\";\r\nimport {createStore} from \"redux\";\r\nimport {Provider} from \"react-redux\";\r\nimport {ThemeSwitcherProvider} from \"react-css-theme-switcher\";\r\nimport {THEME_CONFIG} from \"./configs/AppConfig\";\r\n\r\nconst store = createStore(reducers)\r\n\r\nconst themes = {\r\n  dark: `${process.env.PUBLIC_URL}/css/dark-theme.css`,\r\n  light: `${process.env.PUBLIC_URL}/css/light-theme.css`,\r\n};\r\n\r\nconst Main = ()=>{\r\n  return(\r\n    <Provider store={store}>\r\n      <ThemeSwitcherProvider themeMap={themes} defaultTheme={THEME_CONFIG.currentTheme}\r\n                             insertionPoint=\"styles-insertion-point\">\r\n        <App/>\r\n      </ThemeSwitcherProvider>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nReactDOM.render(<Main/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","class Utils {\r\n  static wrapPromise(promise) {\r\n    let status = \"pending\";\r\n    let result;\r\n    let suspender = promise.then(\r\n      (r) => {\r\n        status = \"success\";\r\n        result = r;\r\n      },\r\n      (e) => {\r\n        status = \"error\";\r\n        result = e;\r\n      }\r\n    );\r\n    return {\r\n      read() {\r\n        if (status === \"pending\") {\r\n          throw suspender;\r\n        } else if (status === \"error\") {\r\n          throw result;\r\n        } else if (status === \"success\") {\r\n          return result;\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  static getIpAddress(interfaces) {\r\n    for (let devName in interfaces) {\r\n      let iFace = interfaces[devName];\r\n\r\n      for (let i = 0; i < iFace.length; i++) {\r\n        let alias = iFace[i];\r\n        if (alias.family === 'IPv4' && alias.address !== '127.0.0.1' && !alias.internal)\r\n          return alias.address;\r\n      }\r\n    }\r\n    return '0.0.0.0';\r\n  }\r\n\r\n  static setItem(key, data) {\r\n    try {\r\n      let json = JSON.stringify(data)\r\n      sessionStorage.setItem(key, json)\r\n    } catch (e) {\r\n      return null\r\n    }\r\n  }\r\n\r\n  static getItem(key) {\r\n    try {\r\n      let data = JSON.parse(sessionStorage.getItem(key))\r\n      return data\r\n    } catch (e) {\r\n      return null\r\n    }\r\n  }\r\n\r\n  static formatDate(date) {\r\n    let d = new Date(date),\r\n      month = '' + (d.getMonth() + 1),\r\n      day = '' + d.getDate(),\r\n      year = d.getFullYear();\r\n\r\n    if (month.length < 2)\r\n      month = '0' + month;\r\n    if (day.length < 2)\r\n      day = '0' + day;\r\n\r\n    return [year, month, day].join('-');\r\n  }\r\n\r\n  static formatTime(time) {\r\n    let d = new Date(time),\r\n      hour = '' + (d.getHours()),\r\n      minute = '' + d.getMinutes(),\r\n      second = d.getSeconds();\r\n\r\n    if (hour.length < 2)\r\n      hour = '0' + hour;\r\n    if (minute.length < 2)\r\n      minute = '0' + minute;\r\n    if (second.length < 2)\r\n      second = '0' + second;\r\n\r\n    return [hour, minute, second].join(':');\r\n  }\r\n\r\n  static checkMongooseObjectId(id) {\r\n    if (id.match(/^[0-9a-fA-F]{24}$/)) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  static getRouteMongooseId(location) {\r\n    let split = location.split(\"/\")\r\n    let id = split.find(item => this.checkMongooseObjectId(item)) || \"\"\r\n    return id\r\n  }\r\n\r\n  static convertBufferToUrl(buffer) {\r\n    const blob = new Blob([buffer])\r\n    const url = URL.createObjectURL(blob)\r\n    return url\r\n  }\r\n\r\n  static removeDuplicate(array, prop = \"_id\") {\r\n    return array.filter((v, i, a) => a.findIndex(t => (t[prop] === v[prop])) === i)\r\n  }\r\n\r\n  static checkObject(object) {\r\n    return object && Object.keys(object).length > 0\r\n  }\r\n\r\n\r\n  /**\r\n   * Get first character from first & last sentences of a username\r\n   * @param {String} name - Username\r\n   * @return {String} 2 characters string\r\n   */\r\n  static getNameInitial(name) {\r\n    let initials = name.match(/\\b\\w/g) || [];\r\n    return ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n  }\r\n\r\n  /**\r\n   * Get current path related object from Navigation Tree\r\n   * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n   * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n   * @return {Object} object that contained the path string\r\n   */\r\n  static getRouteInfo(navTree, path) {\r\n    if (navTree.path === path) {\r\n      return navTree;\r\n    }\r\n    let route;\r\n    for (let p in navTree) {\r\n      if (navTree.hasOwnProperty(p) && typeof navTree[p] === 'object') {\r\n        route = this.getRouteInfo(navTree[p], path);\r\n        if (route) {\r\n          return route;\r\n        }\r\n      }\r\n    }\r\n    return route;\r\n  }\r\n\r\n  /**\r\n   * Get accessible color contrast\r\n   * @param {String} hex - Hex color code e.g '#3e82f7'\r\n   * @return {String} 'dark' or 'light'\r\n   */\r\n  static getColorContrast(hex) {\r\n    if (!hex) {\r\n      return 'dark'\r\n    }\r\n    const threshold = 130;\r\n    const hRed = hexToR(hex);\r\n    const hGreen = hexToG(hex);\r\n    const hBlue = hexToB(hex);\r\n\r\n    function hexToR(h) {\r\n      return parseInt((cutHex(h)).substring(0, 2), 16)\r\n    }\r\n\r\n    function hexToG(h) {\r\n      return parseInt((cutHex(h)).substring(2, 4), 16)\r\n    }\r\n\r\n    function hexToB(h) {\r\n      return parseInt((cutHex(h)).substring(4, 6), 16)\r\n    }\r\n\r\n    function cutHex(h) {\r\n      return (h.charAt(0) === '#') ? h.substring(1, 7) : h\r\n    }\r\n\r\n    const cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n    if (cBrightness > threshold) {\r\n      return 'dark'\r\n    } else {\r\n      return 'light'\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Darken or lighten a hex color\r\n   * @param {String} color - Hex color code e.g '#3e82f7'\r\n   * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n   * @return {String} Darken or lighten color\r\n   */\r\n  static shadeColor(color, percent) {\r\n    let R = parseInt(color.substring(1, 3), 16);\r\n    let G = parseInt(color.substring(3, 5), 16);\r\n    let B = parseInt(color.substring(5, 7), 16);\r\n    R = parseInt(R * (100 + percent) / 100);\r\n    G = parseInt(G * (100 + percent) / 100);\r\n    B = parseInt(B * (100 + percent) / 100);\r\n    R = (R < 255) ? R : 255;\r\n    G = (G < 255) ? G : 255;\r\n    B = (B < 255) ? B : 255;\r\n    const RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n    const GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n    const BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n    return `#${RR}${GG}${BB}`;\r\n  }\r\n\r\n  /**\r\n   * Convert RGBA to HEX\r\n   * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n   * @return {String} HEX color\r\n   */\r\n  static rgbaToHex(rgba) {\r\n    const trim = str => (str.replace(/^\\s+|\\s+$/gm, ''))\r\n    const inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n      r = parseInt(trim(inParts[0].substring(1)), 10),\r\n      g = parseInt(trim(inParts[1]), 10),\r\n      b = parseInt(trim(inParts[2]), 10),\r\n      a = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n    const outParts = [\r\n      r.toString(16),\r\n      g.toString(16),\r\n      b.toString(16),\r\n      Math.round(a * 255).toString(16).substring(0, 2)\r\n    ];\r\n\r\n    outParts.forEach(function (part, i) {\r\n      if (part.length === 1) {\r\n        outParts[i] = '0' + part;\r\n      }\r\n    })\r\n    return (`#${outParts.join('')}`);\r\n  }\r\n\r\n  /**\r\n   * Returns either a positive or negative\r\n   * @param {Number} number - number value\r\n   * @param {any} positive - value that return when positive\r\n   * @param {any} negative - value that return when negative\r\n   * @return {any} positive or negative value based on param\r\n   */\r\n  static getSignNum(number, positive, negative) {\r\n    if (number > 0) {\r\n      return positive\r\n    }\r\n    if (number < 0) {\r\n      return negative\r\n    }\r\n    return null\r\n  }\r\n\r\n  /**\r\n   * Returns either ascending or descending value\r\n   * @param {Object} a - antd Table sorter param a\r\n   * @param {Object} b - antd Table sorter param b\r\n   * @param {String} key - object key for compare\r\n   * @return {any} a value minus b value\r\n   */\r\n  static antdTableSorter(a, b, key) {\r\n    if (typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n      return a[key] - b[key]\r\n    }\r\n\r\n    if (typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n      a = a[key].toLowerCase();\r\n      b = b[key].toLowerCase();\r\n      return a > b ? -1 : b > a ? 1 : 0;\r\n    }\r\n    return\r\n  }\r\n\r\n  /**\r\n   * Filter array of object\r\n   * @param {Array} list - array of objects that need to filter\r\n   * @param {String} key - object key target\r\n   * @param {any} value  - value that excluded from filter\r\n   * @return {Array} a value minus b value\r\n   */\r\n  static filterArray(list, key, value) {\r\n    let data = list\r\n    if (list) {\r\n      data = list.filter(item => item[key] === value)\r\n    }\r\n    return data\r\n  }\r\n\r\n  /**\r\n   * Remove object from array by value\r\n   * @param {Array} list - array of objects\r\n   * @param {String} key - object key target\r\n   * @param {any} value  - target value\r\n   * @return {Array} Array that removed target object\r\n   */\r\n  static deleteArrayRow(list, key, value) {\r\n    let data = list\r\n    if (list) {\r\n      data = list.filter(item => item[key] !== value)\r\n    }\r\n    return data\r\n  }\r\n\r\n  /**\r\n   * Wild card search on all property of the object\r\n   * @param {Number | String} input - any value to search\r\n   * @param {Array} list - array for search\r\n   * @return {Array} array of object contained keyword\r\n   */\r\n  static wildCardSearch(list, input) {\r\n    const searchText = (item) => {\r\n      for (let key in item) {\r\n        if (item[key] == null) {\r\n          continue;\r\n        }\r\n        if (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n          return true;\r\n        }\r\n      }\r\n    };\r\n    list = list.filter(value => searchText(value));\r\n    return list;\r\n  }\r\n\r\n  /**\r\n   * Get Breakpoint\r\n   * @param {Object} screens - Grid.useBreakpoint() from antd\r\n   * @return {Array} array of breakpoint size\r\n   */\r\n  static getBreakPoint(screens) {\r\n    let breakpoints = []\r\n    for (const key in screens) {\r\n      if (screens.hasOwnProperty(key)) {\r\n        const element = screens[key];\r\n        if (element) {\r\n          breakpoints.push(key)\r\n        }\r\n      }\r\n    }\r\n    return breakpoints\r\n  }\r\n}\r\n\r\nexport default Utils;\r\n","export const SET_CHATS = \"SET_CHATS\"\r\nexport const ADD_CHAT = \"ADD_CHAT\"\r\nexport const DELETE_CHAT = \"DELETE_CHAT\"\r\nexport const SET_CURRENT_CHAT = \"SET_CURRENT_CHAT\"\r\nexport const SET_CURRENT_CHAT_MESSAGES = \"SET_CURRENT_CHAT_MESSAGES\"\r\nexport const ADD_MESSAGE = \"ADD_MESSAGE\"\r\nexport const LOAD_MORE_MESSAGES=\"LOAD_MORE_MESSAGES\"\r\nexport const UPDATE_MESSAGE = \"UPDATE_MESSAGE\"\r\nexport const SET_CURRENT_REPLIED_MESSAGE = \"SET_CURRENT_REPLIED_MESSAGE\"\r\n","import {SET_ACTIVE_USERS} from \"../constants/User\";\r\n\r\nexport const setActiveUsers = (data) => {\r\n  return {\r\n    type: SET_ACTIVE_USERS,\r\n    payload: data\r\n  }\r\n}\r\n","import {io} from \"socket.io-client\";\r\nimport {env} from '../configs/EnvironmentConfig'\r\nimport CONSTANTS from \"../utils/constants\";\r\nimport {setActiveUsers} from \"../redux/actions/UserActions\";\r\nimport {\r\n  addChat,\r\n  addMessage, deleteChat,\r\n  loadMoreMessages,\r\n  setChats,\r\n  setCurrentChatMessages,\r\n  updateMessage\r\n} from \"../redux/actions/ChatActions\";\r\nimport {setUserInfo} from \"../redux/actions/Auth\";\r\nimport {USER_INFO} from \"../redux/constants/Auth\";\r\nimport Utils from \"../utils\";\r\n\r\nclass Socket {\r\n  static socket = io(env.API_ENDPOINT_URL, {transports: ['websocket', 'polling', 'flashsocket']})\r\n  static userList = []\r\n  static chatList = []\r\n  static user = {}\r\n\r\n  // connected\r\n  static onConnect(user = Utils.getItem(USER_INFO)) {\r\n    this.socket.on(\"connect\", () => {\r\n      console.log('Hello', this.socket.id, user)\r\n      if (user !== null && user !== undefined && JSON.stringify(user) !== \"{}\") {\r\n        this.socket.emit(CONSTANTS.SOCKET_EVENTS.CONNECTED, user)\r\n      }\r\n    })\r\n  }\r\n\r\n  // active users\r\n  static emitGetActiveUsers() {\r\n    this.socket.emit(CONSTANTS.SOCKET_EVENTS.GET_ACTIVE_USERS)\r\n  }\r\n\r\n  static onGetActiveUsers(callback) {\r\n    this.socket.on(CONSTANTS.SOCKET_EVENTS.GET_ACTIVE_USERS, (users) => {\r\n      callback(setActiveUsers(users))\r\n    })\r\n  }\r\n\r\n  // login\r\n  static emitLogin(user) {\r\n    this.user = user\r\n    this.socket.emit(CONSTANTS.SOCKET_EVENTS.LOG_IN, user)\r\n    this.socket.emit(CONSTANTS.SOCKET_EVENTS.CONNECTED, user)\r\n  }\r\n\r\n  static onLogin(callback) {\r\n    this.socket.on(CONSTANTS.SOCKET_EVENTS.LOG_IN, (users) => {\r\n      callback(setActiveUsers(users))\r\n    })\r\n  }\r\n\r\n  // logout\r\n  static emitLogout(user) {\r\n    this.socket.emit(CONSTANTS.SOCKET_EVENTS.LOG_OUT, user)\r\n  }\r\n\r\n  static onLogout(callback) {\r\n    this.socket.on(CONSTANTS.SOCKET_EVENTS.LOG_OUT, () => {\r\n    })\r\n  }\r\n\r\n  // create new chat\r\n  static emitCreateNewChat(members) {\r\n    this.socket.emit(CONSTANTS.SOCKET_EVENTS.CREATE_NEW_CHAT, members)\r\n  }\r\n\r\n  static onCreateNewChat(callback) {\r\n    this.socket.on(CONSTANTS.SOCKET_EVENTS.CREATE_NEW_CHAT, chat => {\r\n      callback(addChat(chat))\r\n    })\r\n  }\r\n\r\n  // get chats\r\n  static emitGetChats() {\r\n    this.socket.emit(CONSTANTS.SOCKET_EVENTS.GET_CHATS)\r\n  }\r\n\r\n  static onGetChats(callback) {\r\n    this.socket.on(CONSTANTS.SOCKET_EVENTS.GET_CHATS, (chats) => {\r\n      callback(setChats(chats))\r\n    })\r\n  }\r\n\r\n  // delete a chat\r\n  static emitDeleteChat(chatId){\r\n    this.socket.emit(CONSTANTS.SOCKET_EVENTS.DELETE_CHAT, chatId)\r\n  }\r\n\r\n  static onDeleteChat(callback){\r\n    this.socket.on(CONSTANTS.SOCKET_EVENTS.DELETE_CHAT, (chatId, messages)=>{\r\n      console.log({chatId, messages})\r\n      callback(deleteChat(chatId))\r\n    })\r\n  }\r\n\r\n  // get messages\r\n  static emitGetCurrentChatMessages(chatId) {\r\n    this.socket.emit(CONSTANTS.SOCKET_EVENTS.GET_CURRENT_CHAT_MESSAGES, chatId)\r\n  }\r\n\r\n  static onGetCurrentChatMessages(callback) {\r\n    this.socket.on(CONSTANTS.SOCKET_EVENTS.GET_CURRENT_CHAT_MESSAGES, (messages) => {\r\n      callback(setCurrentChatMessages(messages))\r\n    })\r\n  }\r\n\r\n//  send message\r\n  static emitSendMessage(message) {\r\n    this.socket.emit(CONSTANTS.SOCKET_EVENTS.SEND_MESSAGE, message)\r\n  }\r\n\r\n  static onSendMessage(callback) {\r\n    this.socket.on(CONSTANTS.SOCKET_EVENTS.SEND_MESSAGE, (message) => {\r\n      callback(addMessage(message))\r\n    })\r\n  }\r\n\r\n//  load more messages\r\n  static emitLoadMoreMessages(chatId, options) {\r\n    this.socket.emit(CONSTANTS.SOCKET_EVENTS.LOAD_MORE_MESSAGES, chatId, options)\r\n  }\r\n\r\n  static onLoadMoreMessages(callback) {\r\n    this.socket.on(CONSTANTS.SOCKET_EVENTS.LOAD_MORE_MESSAGES, (messages) => {\r\n      callback(loadMoreMessages(messages))\r\n    })\r\n  }\r\n\r\n//  react a message\r\n  static emitReactMessage(data){\r\n    this.socket.emit(CONSTANTS.SOCKET_EVENTS.REACT_MESSAGE, data)\r\n  }\r\n\r\n  static onReactMessage(callback){\r\n    this.socket.on(CONSTANTS.SOCKET_EVENTS.REACT_MESSAGE, (message)=>{\r\n      callback(updateMessage(message))\r\n    })\r\n  }\r\n\r\n//  update user profile\r\n  static emitUpdateUserProfileImage(data){\r\n    this.socket.emit(CONSTANTS.SOCKET_EVENTS.UPDATE_USER_PROFILE_IMAGE, data)\r\n\r\n  }\r\n\r\n  static onUpdateUserProfileImage(callback){\r\n    this.socket.on(CONSTANTS.SOCKET_EVENTS.UPDATE_USER_PROFILE_IMAGE, (user)=>{\r\n      // callback(setUserInfo(user))\r\n      console.log(\"Uploaded image\")\r\n    })\r\n  }\r\n}\r\n\r\nexport default Socket\r\n","import {\r\n  SET_CHATS,\r\n  ADD_CHAT,\r\n  SET_CURRENT_CHAT_MESSAGES,\r\n  SET_CURRENT_CHAT,\r\n  ADD_MESSAGE,\r\n  LOAD_MORE_MESSAGES, UPDATE_MESSAGE, SET_CURRENT_REPLIED_MESSAGE, DELETE_CHAT\r\n} from \"../constants/Chat\";\r\n\r\nexport const setChats = (data)=>{\r\n  return {\r\n    type: SET_CHATS,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const addChat = (data)=>{\r\n  return {\r\n    type: ADD_CHAT,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const setCurrentChat = (data)=>{\r\n  return{\r\n    type: SET_CURRENT_CHAT,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const setCurrentChatMessages = (data)=>{\r\n  return{\r\n    type: SET_CURRENT_CHAT_MESSAGES,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const addMessage = (data)=>{\r\n  return{\r\n    type: ADD_MESSAGE,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const loadMoreMessages = (data)=>{\r\n  return{\r\n    type: LOAD_MORE_MESSAGES,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const updateMessage = (data)=>{\r\n  return{\r\n    type: UPDATE_MESSAGE,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const setCurrentRepliedMessage = (data)=>{\r\n  return{\r\n    type: SET_CURRENT_REPLIED_MESSAGE,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const deleteChat = (data)=>{\r\n  return{\r\n    type: DELETE_CHAT,\r\n    payload: data\r\n  }\r\n}\r\n","import {\r\n  SIGNIN,\r\n  AUTHENTICATED,\r\n  SIGNOUT,\r\n  SIGNOUT_SUCCESS,\r\n  SHOW_AUTH_MESSAGE,\r\n  HIDE_AUTH_MESSAGE,\r\n  SIGNUP,\r\n  SIGNUP_SUCCESS,\r\n  SHOW_LOADING,\r\n  SIGNIN_WITH_GOOGLE,\r\n  SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED, HIDE_LOADING,\r\n  SET_USER_INFO,\r\n  GET_USER_INFO, AUTH_TOKEN, USER_INFO\r\n} from '../constants/Auth';\r\n\r\nexport const signIn = (user) => {\r\n  return {\r\n    type: SIGNIN,\r\n    payload: user\r\n  }\r\n};\r\n\r\nexport const authenticated = (token, userInfo) => {\r\n  sessionStorage.setItem(AUTH_TOKEN, token)\r\n  return {\r\n    type: AUTHENTICATED,\r\n    token\r\n  }\r\n};\r\n\r\nexport const setUserInfo = (data)=>{\r\n  sessionStorage.setItem(USER_INFO, JSON.stringify(data))\r\n  return{\r\n    type: SET_USER_INFO,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const signOut = () => {\r\n  sessionStorage.removeItem(AUTH_TOKEN)\r\n  return {\r\n    type: SIGNOUT\r\n  };\r\n};\r\n\r\nexport const signOutSuccess = () => {\r\n  return {\r\n    type: SIGNOUT_SUCCESS,\r\n  }\r\n};\r\n\r\nexport const signUp = (user) => {\r\n  return {\r\n    type: SIGNUP,\r\n    payload: user\r\n  };\r\n};\r\n\r\nexport const signUpSuccess = (token) => {\r\n  return {\r\n    type: SIGNUP_SUCCESS,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithGoogle = () => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE\r\n  };\r\n};\r\n\r\nexport const signInWithGoogleAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithFacebook = () => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK\r\n  };\r\n};\r\n\r\nexport const signInWithFacebookAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const showAuthMessage = (message) => {\r\n  return {\r\n    type: SHOW_AUTH_MESSAGE,\r\n    message\r\n  };\r\n};\r\n\r\nexport const hideAuthMessage = () => {\r\n  return {\r\n    type: HIDE_AUTH_MESSAGE,\r\n  };\r\n};\r\n\r\nexport const showLoading = () => {\r\n  return {\r\n    type: SHOW_LOADING,\r\n  };\r\n};\r\n\r\nexport const hideLoading = ()=>{\r\n  return{\r\n    type: HIDE_LOADING\r\n  }\r\n}\r\n","const dev = {\r\n  API_ENDPOINT_URL: `http://localhost:3000`\r\n};\r\n\r\nconst prod = {\r\n  API_ENDPOINT_URL: 'https://realtimechatxyz.herokuapp.com/'\r\n};\r\n\r\nconst test = {\r\n  API_ENDPOINT_URL: 'https://api.test.com'\r\n};\r\n\r\nconst getEnv = () => {\r\n\tswitch (process.env.NODE_ENV) {\r\n\t\tcase 'development':\r\n\t\t\treturn dev\r\n\t\tcase 'production':\r\n\t\t\treturn prod\r\n\t\tcase 'test':\r\n\t\t\treturn test\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nexport const env = getEnv()\r\n"],"sourceRoot":""}